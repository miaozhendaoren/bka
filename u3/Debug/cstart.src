	; TASKING VX-toolset for TriCore: C compiler v3.5r1 Build 484.1.2
	; Options: -f cc5516a -c99 --dep-file=.cstart.o.d -Ctc1782 --core=tc1.3.1 --fpu-present -F -g --make-target=cstart.o -t4 --language=-gcc,-volatile,+strings --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto -o cstart.src
	; Module start
	.name	"cstart"

	
$FPU
$TC131
	
	.sdecl	'.text.libc.reset',code,cluster('_START')
	.sect	'.text.libc.reset'
	.align	2
	
	.global	_START

; ..\cstart.c	     1  /**************************************************************************
; ..\cstart.c	     2  **                                                                        *
; ..\cstart.c	     3  **  FILE        :  cstart.c                                               *
; ..\cstart.c	     4  **                                                                        *
; ..\cstart.c	     5  **  DESCRIPTION :                                                         *
; ..\cstart.c	     6  **      The system startup code initializes the processor's registers     *
; ..\cstart.c	     7  **      and the application C variables.                                  *
; ..\cstart.c	     8  **                                                                        *
; ..\cstart.c	     9  **  Copyright 1996-2010 Altium BV                                         *
; ..\cstart.c	    10  **                                                                        *
; ..\cstart.c	    11  **************************************************************************/
; ..\cstart.c	    12  
; ..\cstart.c	    13  #include "cstart.h"                             /* include configuration */
; ..\cstart.c	    14  
; ..\cstart.c	    15  #include <stdlib.h>
; ..\cstart.c	    16  #include <stdbool.h>
; ..\cstart.c	    17  
; ..\cstart.c	    18  #ifdef __CPU__
; ..\cstart.c	    19  #include __SFRFILE__(__CPU__)
; ..\cstart.c	    20  #endif
; ..\cstart.c	    21  
; ..\cstart.c	    22  #pragma weak   exit
; ..\cstart.c	    23  #pragma extern _Exit
; ..\cstart.c	    24  #pragma profiling off                           /* prevent profiling information on cstart */
; ..\cstart.c	    25  #pragma tradeoff 4                              /* preset tradeoff level (for size) */
; ..\cstart.c	    26  #pragma runtime BCM                             /* disable runtime error checking for cstart */
; ..\cstart.c	    27  #pragma nomisrac                                /* disable MISRA-C checking */
; ..\cstart.c	    28  
; ..\cstart.c	    29  #if __USE_ARGC_ARGV
; ..\cstart.c	    30  static char argcv[__ARGCV_BUFSIZE];
; ..\cstart.c	    31  extern int _argcv( const char *, size_t );
; ..\cstart.c	    32  #endif
; ..\cstart.c	    33  
; ..\cstart.c	    34  /* linker definitions */
; ..\cstart.c	    35  extern __far void _lc_ue_ustack[];      /* user stack end */
; ..\cstart.c	    36  extern __far void _lc_ue_istack[];      /* interrupt stack end */
; ..\cstart.c	    37  extern __far void _lc_u_int_tab[];      /* interrupt table */
; ..\cstart.c	    38  extern __far void _lc_u_trap_tab[];     /* trap table */
; ..\cstart.c	    39  extern __far void _SMALL_DATA_[];       /* centre of A0 addressable area */
; ..\cstart.c	    40  extern __far void _LITERAL_DATA_[];     /* centre of A1 addressable area */
; ..\cstart.c	    41  extern __far void _A8_DATA_[];          /* centre of A8 addressable area */
; ..\cstart.c	    42  extern __far void _A9_DATA_[];          /* centre of A9 addressable area */
; ..\cstart.c	    43  
; ..\cstart.c	    44  /* external functions */
; ..\cstart.c	    45  extern void _c_init(void);              /* C initialization function */
; ..\cstart.c	    46  extern void _call_init(void);           /* call a user function before main() */
; ..\cstart.c	    47  extern void _endinit(void);             /* call a user function with protection switched off */
; ..\cstart.c	    48  
; ..\cstart.c	    49  /* library references */
; ..\cstart.c	    50  #pragma extern main
; ..\cstart.c	    51  extern int main( int argc, char *argv[] );
; ..\cstart.c	    52  
; ..\cstart.c	    53  /* prototype */
; ..\cstart.c	    54  extern void inline _endinit_clear(void);
; ..\cstart.c	    55  extern void inline _endinit_set  (void);
; ..\cstart.c	    56  
; ..\cstart.c	    57  #if __PROF_ENABLE__
; ..\cstart.c	    58  extern void __prof_init( void );
; ..\cstart.c	    59  #endif
; ..\cstart.c	    60  
; ..\cstart.c	    61  #if __CLOCKS_PER_SEC_INIT
; ..\cstart.c	    62  static void setclockpersec( void );
; ..\cstart.c	    63  extern unsigned long long setfoschz( unsigned long long );
; ..\cstart.c	    64  #endif
; ..\cstart.c	    65  
; ..\cstart.c	    66  /*********************************************************************************
; ..\cstart.c	    67   * _reset() - reset vector
; ..\cstart.c	    68   *********************************************************************************/
; ..\cstart.c	    69  #pragma section code libc.reset
; ..\cstart.c	    70  
; ..\cstart.c	    71  void _START( void )
; Function _START
.L17:
_START:	.type	func

; ..\cstart.c	    72  {
; ..\cstart.c	    73  
; ..\cstart.c	    74          /* temporarily switch off the workaround for si-bug cpu_tc065,
; ..\cstart.c	    75             this can safely be done, since this function is not called
; ..\cstart.c	    76             normally anyhow
; ..\cstart.c	    77          */
; ..\cstart.c	    78          __asm(".if\t@DEF('__CPU_TC065__')\n$CPU_TC065\tOFF\n\t.endif" );
	.if	@DEF('__CPU_TC065__')
$CPU_TC065	OFF
	.endif
.L286:

; ..\cstart.c	    79          
; ..\cstart.c	    80          __asm("j\t__init_sp");
	j	__init_sp
.L287:

; ..\cstart.c	    81  
; ..\cstart.c	    82          __asm(".if\t@DEF('__CPU_TC065__')\n$CPU_TC065\tON\n\t.endif" );
	.if	@DEF('__CPU_TC065__')
$CPU_TC065	ON
	.endif
.L288:

; ..\cstart.c	    83  
; ..\cstart.c	    84          /*
; ..\cstart.c	    85           * Set default Boot Configuration Value
; ..\cstart.c	    86           */
; ..\cstart.c	    87  #ifndef __EBU_BOOTCFG_VALUE
; ..\cstart.c	    88  #  define __EBU_BOOTCFG_VALUE  0x800C
; ..\cstart.c	    89  #endif
; ..\cstart.c	    90  
; ..\cstart.c	    91          /*
; ..\cstart.c	    92           * Set address for the Boot Configuration Value
; ..\cstart.c	    93           * to 'Boot memory Offset Address + alignment'
; ..\cstart.c	    94           */
; ..\cstart.c	    95  #if     !(__EBU_BOOTCFG_VALUE & 0x1)
; ..\cstart.c	    96          /*
; ..\cstart.c	    97           * Address Alignment is off
; ..\cstart.c	    98           */
; ..\cstart.c	    99          __asm(".align\t4");
	.align	4
.L289:

; ..\cstart.c	   100  #else
; ..\cstart.c	   101          /*                        
; ..\cstart.c	   102           * Address Alignment is on and 16 bit wide memory
; ..\cstart.c	   103           */
; ..\cstart.c	   104  #if     ( !(__EBU_BOOTCFG_VALUE & 0x8000) )
; ..\cstart.c	   105          __asm(".align\t8");
; ..\cstart.c	   106  #else
; ..\cstart.c	   107          /*                        
; ..\cstart.c	   108           * Address Alignment is on and 32 bit wide memory
; ..\cstart.c	   109           */
; ..\cstart.c	   110          __asm(".align\t16");
; ..\cstart.c	   111  #endif
; ..\cstart.c	   112  #endif                
; ..\cstart.c	   113          __asm(".word\t%0"::"i"(__EBU_BOOTCFG_VALUE));
	.word	#0
.L290:

; ..\cstart.c	   114  
; ..\cstart.c	   115          /* add a nop if necessary to avoid a warning by the assembler
; ..\cstart.c	   116             actually this code will never be reached
; ..\cstart.c	   117          */
; ..\cstart.c	   118          __asm(".if\t@DEF('__CPU_TC048__')\n\tnop\n\t.endif" );
	.if	@DEF('__CPU_TC048__')
	nop
	.endif
.L291:

; ..\cstart.c	   119  }
	ret
.L92:
	
___START_function_end:
	.size	_START,___START_function_end-_START
.L55:
	; End of function
	
	.sdecl	'.text.cstart.__init_sp',code,cluster('__init_sp')
	.sect	'.text.cstart.__init_sp'
	.align	2
	
	.global	__init_sp

; ..\cstart.c	   120  
; ..\cstart.c	   121  /*********************************************************************************
; ..\cstart.c	   122   * _cstart() - initialize stackpointer
; ..\cstart.c	   123   *********************************************************************************/
; ..\cstart.c	   124  #pragma section code restore
; ..\cstart.c	   125  
; ..\cstart.c	   126  void __init_sp( void )
; Function __init_sp
.L19:
__init_sp:	.type	func

; ..\cstart.c	   127  {
; ..\cstart.c	   128          /* The initialization of the stackpointer is done in a seperate function, 
; ..\cstart.c	   129             because it must be executed in a function which has no stack use.
; ..\cstart.c	   130             
; ..\cstart.c	   131             When a function uses a stack it will be updated at the start of the 
; ..\cstart.c	   132             function. In this function, however, the stackpointer has an irrelevant
; ..\cstart.c	   133             value at the start of the function. A starting value for the stackpointer
; ..\cstart.c	   134             is determined and written in this function. The update to the 
; ..\cstart.c	   135             stackpointer at the start of the function would therefore be undone.
; ..\cstart.c	   136           */
; ..\cstart.c	   137           
; ..\cstart.c	   138          /* 
; ..\cstart.c	   139           * CPU_TC.033 workaround:
; ..\cstart.c	   140           * The stack pointers are aligned to quad-word boundary to workaround these 
; ..\cstart.c	   141           * functional problems CPU_TC.033.
; ..\cstart.c	   142           * Also the C compiler workaround for the appropriate CPU function problem
; ..\cstart.c	   143           * need to be enabled with --silicon-bug=cpu-tc033, to align circular
; ..\cstart.c	   144           * buffers on a quad-word boundary and to size all stack frames to an integral 
; ..\cstart.c	   145           * number of quad-words.
; ..\cstart.c	   146           */
; ..\cstart.c	   147  #if      __CPU_TC033_INITIAL__
; ..\cstart.c	   148  # define STACK_ALIGN    0xfffffff0
; ..\cstart.c	   149  #else
; ..\cstart.c	   150  # define STACK_ALIGN    0xfffffff8
; ..\cstart.c	   151  #endif
; ..\cstart.c	   152  
; ..\cstart.c	   153          /* 
; ..\cstart.c	   154           * Load user stack pointer.
; ..\cstart.c	   155           * Disable this if not started from RESET vector. (E.g.
; ..\cstart.c	   156           * ROM monitors require to keep in control of vectors)
; ..\cstart.c	   157           */
; ..\cstart.c	   158  #if  __USP_INIT
; ..\cstart.c	   159          unsigned int sp = (unsigned int)(_lc_ue_ustack) & STACK_ALIGN;
; ..\cstart.c	   160          __asm("mov.a\tsp,%0"::"d"(sp));
	movh.a	a15,#@his(_lc_ue_ustack)
	lea	a15,[a15]@los(_lc_ue_ustack)
	mov.d	d15,a15
	insert	d15,d15,#0,#0,#3
	mov.a	sp,d15
.L296:

; ..\cstart.c	   161  #endif
; ..\cstart.c	   162          __asm("j\t_start");
	j	_start
.L297:

; ..\cstart.c	   163  }
	ret
.L93:
	
____init_sp_function_end:
	.size	__init_sp,____init_sp_function_end-__init_sp
.L60:
	; End of function
	
	.sdecl	'.text.cstart._start',code,cluster('_start')
	.sect	'.text.cstart._start'
	.align	2
	
	.global	_start

; ..\cstart.c	   164  
; ..\cstart.c	   165  /*********************************************************************************
; ..\cstart.c	   166   * _cstart() - startup code
; ..\cstart.c	   167   *********************************************************************************/
; ..\cstart.c	   168  
; ..\cstart.c	   169  void _start( void )
; Function _start
.L21:
_start:	.type	func
	sub.a	a10,#8
.L134:

; ..\cstart.c	   170  {
; ..\cstart.c	   171          /* Do a dsync before changing any of the csfr values, thus any previous
; ..\cstart.c	   172           * background state gets flushed first. Required for applications that jump
; ..\cstart.c	   173           * to the reset address.
; ..\cstart.c	   174           */
; ..\cstart.c	   175          __dsync();
	dsync
.L302:

; ..\cstart.c	   176          
; ..\cstart.c	   177          /* Set the PSW to its reset value in case of a warm start */
; ..\cstart.c	   178  #if __USER_STACK
; ..\cstart.c	   179          __mtcr(PSW, 0x00000980);        /* clear PSW.IS */
	mov.u	d15,#2432
	mtcr	#65028,d15
	isync
.L95:

; ..\cstart.c	   180  #else
; ..\cstart.c	   181          __mtcr(PSW, 0x00000b80);
; ..\cstart.c	   182  #endif
; ..\cstart.c	   183  
; ..\cstart.c	   184          /* Set the PCXS and PCXO to its reset value in case of a warm start */
; ..\cstart.c	   185          unsigned int pcxi = __mfcr(PCXI);
	mfcr	d15,#65024
.L142:

; ..\cstart.c	   186          pcxi &= 0xfff00000;
	insert	d15,d15,#0,#0,#20
.L303:

; ..\cstart.c	   187          __mtcr(PCXI, pcxi);
	mtcr	#65024,d15
	isync
.L98:

; ..\cstart.c	   828          wdt_con0 = WDT_CON0.U;      (inlined)
	lea	a15,0xf00005f0
	ld.w	d0,[a15]
.L149:

; ..\cstart.c	   829          wdt_con1 = WDT_CON1.U;      (inlined)
	lea	a2,0xf00005f4
	movh.a	a14,#@his(.L356)
	lea	a14,[a14]@los(.L356)
	j	.cocofun_3
.L356:
.L143:

; ..\cstart.c	   842          wdt_con0 |= 0x02;               /* WDTHPW0=0, WDTLCK=1, ENDINIT=0 */      (inlined)
	or	d15,#2
.L304:

; ..\cstart.c	   843          __isync();      (inlined)
	isync
.L305:

; ..\cstart.c	   844          WDT_CON0.U = wdt_con0;                (inlined)
	st.w	[a15],d15
.L306:

; ..\cstart.c	   845          WDT_CON0.U;                     /* read is required */      (inlined)
	ld.w	d15,[a15]
.L99:

; ..\cstart.c	   188  
; ..\cstart.c	   189          /*
; ..\cstart.c	   190           * Clear the ENDINIT bit in the WDT_CON0 register in order
; ..\cstart.c	   191           * to disable the write-protection for registers protected 
; ..\cstart.c	   192           * via the EndInit feature (for example: WDT_CON1).
; ..\cstart.c	   193           */
; ..\cstart.c	   194          _endinit_clear();
; ..\cstart.c	   195          
; ..\cstart.c	   196          /*
; ..\cstart.c	   197           * Disable the Watchdog if requested. Watchdog is enabled by default.
; ..\cstart.c	   198           * The Watchdog is disabled after ENDINIT is set by _endinit_set().
; ..\cstart.c	   199           */       
; ..\cstart.c	   200  #if __WATCHDOG_DISABLE
; ..\cstart.c	   201          WDT_CON1.U |= 0x8;
	ld.w	d15,[a2]
	or	d15,#8
	st.w	[a2],d15
.L104:

; ..\cstart.c	   865          wdt_con0 = WDT_CON0.U;      (inlined)
	ld.w	d0,[a15]
.L152:

; ..\cstart.c	   866          wdt_con1 = WDT_CON1.U;      (inlined)
	movh.a	a14,#@his(.L357)
	lea	a14,[a14]@los(.L357)
	j	.cocofun_3
.L357:
.L150:

; ..\cstart.c	   878          wdt_con0 |= 0x03;               /* WDTHPW0=0, WDTLCK=1, ENDINIT=1 */      (inlined)
	or	d15,#3
.L307:

; ..\cstart.c	   879          __isync();      (inlined)
	isync
.L308:

; ..\cstart.c	   880          WDT_CON0.U = wdt_con0;      (inlined)
	st.w	[a15],d15
.L105:

; ..\cstart.c	   828          wdt_con0 = WDT_CON0.U;      (inlined)
	ld.w	d0,[a15]
.L154:

; ..\cstart.c	   829          wdt_con1 = WDT_CON1.U;      (inlined)
	movh.a	a14,#@his(.L358)
	lea	a14,[a14]@los(.L358)
	j	.cocofun_3
.L358:
.L151:

; ..\cstart.c	   842          wdt_con0 |= 0x02;               /* WDTHPW0=0, WDTLCK=1, ENDINIT=0 */      (inlined)
	or	d15,#2
.L309:

; ..\cstart.c	   843          __isync();      (inlined)
	isync
.L310:

; ..\cstart.c	   844          WDT_CON0.U = wdt_con0;                (inlined)
	st.w	[a15],d15
.L311:

; ..\cstart.c	   845          WDT_CON0.U;                     /* read is required */      (inlined)
	ld.w	d15,[a15]
.L109:

; ..\cstart.c	   202          _endinit_set();
; ..\cstart.c	   203          _endinit_clear();
; ..\cstart.c	   204  #endif
; ..\cstart.c	   205  
; ..\cstart.c	   206          /*
; ..\cstart.c	   207           * PMI_TC.003 workaround:
; ..\cstart.c	   208           * The TLB-A and TLB-B mappings are set to a page size of 16KB.
; ..\cstart.c	   209           */
; ..\cstart.c	   210  #if __PMI_TC003_INITIAL__  && defined MMU_CON
; ..\cstart.c	   211          unsigned int mmu_con = __mfcr(MMU_CON);
; ..\cstart.c	   212          mmu_con &= 0xffffffe1;      /* clear SZA and SZB */
; ..\cstart.c	   213          mmu_con |= 0x00000014;      /* set SZA=SZB=16k   */       
; ..\cstart.c	   214          __mtcr(MMU_CON, mmu_con);
; ..\cstart.c	   215  #endif
; ..\cstart.c	   216  
; ..\cstart.c	   217          /*
; ..\cstart.c	   218           * Load Base Address of Trap Vector Table.
; ..\cstart.c	   219           * Disable this if not started from RESET vector. (E.g.
; ..\cstart.c	   220           * ROM monitors require to keep in control of vectors)
; ..\cstart.c	   221           */
; ..\cstart.c	   222  #if __BTV_INIT
; ..\cstart.c	   223          __mtcr(BTV,  (unsigned int)_lc_u_trap_tab);
	movh.a	a4,#@his(_lc_u_trap_tab)
	lea	a4,[a4]@los(_lc_u_trap_tab)
	mov.d	d15,a4
	mtcr	#65060,d15
	isync
.L312:

; ..\cstart.c	   224  #endif
; ..\cstart.c	   225  
; ..\cstart.c	   226          /*
; ..\cstart.c	   227           * Load Base Address of Interrupt Vector Table.
; ..\cstart.c	   228           * Disable this if not started from RESET vector. (E.g.
; ..\cstart.c	   229           * ROM monitors require to keep in control of vectors)
; ..\cstart.c	   230           */
; ..\cstart.c	   231  #if __BIV_INIT
; ..\cstart.c	   232          __mtcr(BIV, (unsigned int)(_lc_u_int_tab));
	movh.a	a4,#@his(_lc_u_int_tab)
	lea	a4,[a4]@los(_lc_u_int_tab)
	mov.d	d15,a4
	mtcr	#65056,d15
	isync
.L112:

; ..\cstart.c	   233  #endif
; ..\cstart.c	   234  
; ..\cstart.c	   235          /*
; ..\cstart.c	   236           * Load interupt stack pointer.
; ..\cstart.c	   237           * Disable this if not started from RESET vector. (E.g.
; ..\cstart.c	   238           * ROM monitors require to keep in control of vectors)
; ..\cstart.c	   239           */
; ..\cstart.c	   240  #if __ISP_INIT
; ..\cstart.c	   241          unsigned int isp = (unsigned int)(_lc_ue_istack) & STACK_ALIGN;
; ..\cstart.c	   242          __mtcr(ISP, isp);
	movh.a	a4,#@his(_lc_ue_istack)
	lea	a4,[a4]@los(_lc_ue_istack)
	mov.d	d15,a4
	insert	d15,d15,#0,#0,#3
	mtcr	#65064,d15
	isync
.L313:

; ..\cstart.c	   243  #endif
; ..\cstart.c	   244                                                            
; ..\cstart.c	   245          /*
; ..\cstart.c	   246           * PMU/PMI configuration.
; ..\cstart.c	   247           */
; ..\cstart.c	   248  #if defined PMI_CON0 && defined __PMI_CON0_VALUE
; ..\cstart.c	   249          if(__PMI_CON0_INIT)  PMI_CON0.U = __PMI_CON0_VALUE;        
	mov	d15,#0
	movh.a	a4,#63616
	st.w	[a4]@los(0xf87ffd10),d15
.L314:

; ..\cstart.c	   250  #endif
; ..\cstart.c	   251  #if defined PMI_CON1 && defined __PMI_CON1_VALUE
; ..\cstart.c	   252          if(__PMI_CON1_INIT)  PMI_CON1.U = __PMI_CON1_VALUE;        
; ..\cstart.c	   253  #endif  
; ..\cstart.c	   254  #if     defined PMI_CON2 && defined __PMI_CON2_VALUE && \ 
; ..\cstart.c	   255          (  defined _REGTC1337_H || defined _REGTC1367_H || defined _REGTC1387_H || defined _REGTC1728_H \ 
; ..\cstart.c	   256          || defined _REGTC1746_H || defined _REGTC1747_H || defined _REGTC1768_H || defined _REGTC1782_H \ 
; ..\cstart.c	   257          || defined _REGTC1784_H || defined _REGTC1184_H || defined _REGTC1797_H || defined _REGTC1197_H \ 
; ..\cstart.c	   258          || defined _REGTC1734_H || defined _REGTC1767_H || defined _REGTC1736_H || defined _REGTC1732_H \ 
; ..\cstart.c	   259          || defined _REGTC1738_H || defined _REGTC1167_H || defined _REGTC1735_H || defined _REGTC1724_H )
; ..\cstart.c	   260          if(__PMI_CON2_INIT)  PMI_CON2.U = __PMI_CON2_VALUE;        
	mov.u	d15,#644
	addih	d15,d15,#644
	st.w	[a4]@los(0xf87ffd18),d15
.L315:

; ..\cstart.c	   261  #endif
; ..\cstart.c	   262          
; ..\cstart.c	   263  #if defined PMU_EIFCON && defined __PMU_EIFCON_VALUE
; ..\cstart.c	   264          if(__PMU_EIFCON_INIT)  PMU_EIFCON.U = __PMU_EIFCON_VALUE;
; ..\cstart.c	   265  #endif
; ..\cstart.c	   266  
; ..\cstart.c	   267          /*
; ..\cstart.c	   268           * DMI configuration.
; ..\cstart.c	   269           */
; ..\cstart.c	   270  #if     defined DMI_CON && defined __DMI_CON_VALUE && \ 
; ..\cstart.c	   271          (  defined _REGTC1167_H || defined _REGTC1197_H || defined _REGTC1337_H || defined _REGTC1367_H \ 
; ..\cstart.c	   272          || defined _REGTC1387_H || defined _REGTC1728_H || defined _REGTC1734_H || defined _REGTC1738_H \ 
; ..\cstart.c	   273          || defined _REGTC1746_H || defined _REGTC1747_H || defined _REGTC1767_H || defined _REGTC1768_H \ 
; ..\cstart.c	   274          || defined _REGTC1782_H || defined _REGTC1784_H || defined _REGTC1184_H || defined _REGTC1797_H \ 
; ..\cstart.c	   275          || defined _REGTC1724_H )
; ..\cstart.c	   276          if(__DMI_CON_INIT)  DMI_CON.U = __DMI_CON_VALUE;        
	mov.u	d15,#2050
	addih	d15,d15,#2050
	st.w	[a4]@los(0xf87ffc10),d15
.L316:

; ..\cstart.c	   277  #endif
; ..\cstart.c	   278          
; ..\cstart.c	   279          /*
; ..\cstart.c	   280           * Data cache control (Reset 0H).
; ..\cstart.c	   281           * CPU_TC013 workaround:
; ..\cstart.c	   282           * The 16KB D-Cache is enabled to workaround
; ..\cstart.c	   283           * the CPU_TC013 functional problem.     
; ..\cstart.c	   284           * NOTE: Setting the D-Cache size must be done at the
; ..\cstart.c	   285           *       very beginning of the startup code.
; ..\cstart.c	   286           */
; ..\cstart.c	   287  #if defined  DMU_CON
; ..\cstart.c	   288  #  if __CPU_TC013_INITIAL__ 
; ..\cstart.c	   289          DMU_CON.U = 0x1;
; ..\cstart.c	   290  #  endif
; ..\cstart.c	   291  #endif
; ..\cstart.c	   292  
; ..\cstart.c	   293          /*
; ..\cstart.c	   294           * Bus configuration EBU_CLC within endinit.
; ..\cstart.c	   295           */
; ..\cstart.c	   296  #  if defined EBU_CLC && defined __EBU_CLC_VALUE
; ..\cstart.c	   297          if(__EBU_CLC_INIT)  EBU_CLC.U = __EBU_CLC_VALUE;
; ..\cstart.c	   298  #  endif
; ..\cstart.c	   299  
; ..\cstart.c	   300          /*
; ..\cstart.c	   301           *      Setting up the PLL after Reset.
; ..\cstart.c	   302           *
; ..\cstart.c	   303           *      After reset, the system clock will be running at the VCO
; ..\cstart.c	   304           *      base frequency devided by a factor KDIV. To set up the PLL
; ..\cstart.c	   305           *      ater resert, next action must be executed.
; ..\cstart.c	   306           */
; ..\cstart.c	   307  #if defined PLL_CLC && defined __PLL_CLC_VALUE
; ..\cstart.c	   308  #if     __PLL_CLC_INIT
; ..\cstart.c	   309  #if     ( defined _REGTC11IB_H )
; ..\cstart.c	   310  #define __PLLBYP        PLL1_BP
; ..\cstart.c	   311  #define __LOCK          PLL1_LOCK
; ..\cstart.c	   312          if ( PLL_CLC.B.__PLLBYP == 0 )
; ..\cstart.c	   313          {
; ..\cstart.c	   314                  PLL_CLC.U = __PLL_CLC_VALUE;
; ..\cstart.c	   315                  while( PLL_CLC.B.__LOCK==0);                      /* Wait until the PLL becomes locked */
; ..\cstart.c	   316          }
; ..\cstart.c	   317  #else
; ..\cstart.c	   318  #define __PLL_CLC_SYSFS_VALUE   ((__PLL_CLC_VALUE>>2)&0x1)
; ..\cstart.c	   319  #define __PLL_CLC_VCOBYP_VALUE  ((__PLL_CLC_VALUE>>5)&0x1)
; ..\cstart.c	   320  #define __PLL_CLC_VCOSEL_VALUE  ((__PLL_CLC_VALUE>>6)&0x3)
; ..\cstart.c	   321  #define __PLL_CLC_KDIV_VALUE    ((__PLL_CLC_VALUE>>8)&0xf)
; ..\cstart.c	   322  #define __PLL_CLC_PDIV_VALUE    ((__PLL_CLC_VALUE>>13)&0x3)
; ..\cstart.c	   323  #define __PLL_CLC_NDIV_VALUE    ((__PLL_CLC_VALUE>>16)&0x7f)
; ..\cstart.c	   324          if ( PLL_CLC.B.BYPPIN == 0 )
; ..\cstart.c	   325          {
; ..\cstart.c	   326  #if     ( defined _REGTC1100_H || defined _REGTC1115_H || defined _REGTC1130_H )
; ..\cstart.c	   327                  while (OSC_CON.B.OSCR==1);                      /* Wait until the oscillator is running */
; ..\cstart.c	   328  #else
; ..\cstart.c	   329                  while (OSC_CON.B.OSCR==0);                      /* Wait until the oscillator is running */
; ..\cstart.c	   330  #endif
; ..\cstart.c	   331                  PLL_CLC.B.VCOBYP = 1;                           /* Enabled the VCO Bypass Mode */
; ..\cstart.c	   332                  PLL_CLC.B.VCOSEL = __PLL_CLC_VCOSEL_VALUE;      /* Select the VCO band */
; ..\cstart.c	   333                  PLL_CLC.B.PDIV = __PLL_CLC_PDIV_VALUE;
; ..\cstart.c	   334                  PLL_CLC.B.KDIV = __PLL_CLC_KDIV_VALUE;
; ..\cstart.c	   335                  PLL_CLC.B.NDIV = __PLL_CLC_NDIV_VALUE;
; ..\cstart.c	   336  #if __PLL_CLC_VCOBYP_VALUE==0
; ..\cstart.c	   337                  PLL_CLC.B.OSCDISC = 0;                          /* Connect the oscillator to the PLL */
; ..\cstart.c	   338                  while( PLL_CLC.B.LOCK==0);                      /* Wait until the PLL becomes locked */
; ..\cstart.c	   339                  PLL_CLC.B.VCOBYP = 0;                           /* Disabled the VCO Bypass Mode */
; ..\cstart.c	   340  #endif
; ..\cstart.c	   341          }
; ..\cstart.c	   342  #if     ( defined _REGTC1100_H || defined _REGTC1115_H  || defined _REGTC1130_H )
; ..\cstart.c	   343          PLL_CLC.B.SYSFSL = __PLL_CLC_SYSFS_VALUE;                /* System frequency select */
; ..\cstart.c	   344  #else
; ..\cstart.c	   345  #if     (  defined _REGTC1762_H || defined _REGTC1764_H || defined _REGTC1766B_H || defined _REGTC1161_H \ 
; ..\cstart.c	   346          || defined _REGTC1162_H || defined _REGTC1163_H || defined _REGTC1164_H || defined _REGTC1165_H \ 
; ..\cstart.c	   347          || defined _REGTC1166_H )
; ..\cstart.c	   348          PLL_CLC.B.RSV = __PLL_CLC_SYSFS_VALUE;                  /* System frequency select */
; ..\cstart.c	   349  #else
; ..\cstart.c	   350          PLL_CLC.B.SYSFS = __PLL_CLC_SYSFS_VALUE;                /* System frequency select */
; ..\cstart.c	   351  #endif
; ..\cstart.c	   352  #endif
; ..\cstart.c	   353  #endif
; ..\cstart.c	   354  #endif
; ..\cstart.c	   355  #endif
; ..\cstart.c	   356  
; ..\cstart.c	   357          /*
; ..\cstart.c	   358           * System Oscillator configuration
; ..\cstart.c	   359           */
; ..\cstart.c	   360  #if defined SCU_OSCCON && defined __SCU_OSCCON_VALUE
; ..\cstart.c	   361  #if __SCU_OSCCON_INIT
; ..\cstart.c	   362          SCU_OSCCON.U=__SCU_OSCCON_VALUE;
	movh	d15,#8
	st.w	0xf0000510,d15
.L317:

; ..\cstart.c	   363          
; ..\cstart.c	   364          while(SCU_OSCCON.B.PLLLV==0);           /* Oscillator not too low */
	lea	a4,0xf0000510
.L2:
	ld.bu	d15,[a4]
	jz.t	d15:1,.L2				; predicted taken
	lea	a4,0xf0000511

; ..\cstart.c	   365          while(SCU_OSCCON.B.PLLHV==0);           /* Oscillator not too high */
.L3:
	ld.bu	d15,[a4]
	jz.t	d15:0,.L3				; predicted taken
.L318:

; ..\cstart.c	   366  #endif
; ..\cstart.c	   367  #endif
; ..\cstart.c	   368  
; ..\cstart.c	   369          /*
; ..\cstart.c	   370           * Configure PLL Prescaler Mode.
; ..\cstart.c	   371           */
; ..\cstart.c	   372  #if defined SCU_PLLCON1 && defined __SCU_PLLCON1_VALUE
; ..\cstart.c	   373  #if __SCU_PLLCON1_INIT
; ..\cstart.c	   374  #define __SCU_PLLCON1__K1DIV_VALUE      ((__SCU_PLLCON1_VALUE>>16)&0x3f)
; ..\cstart.c	   375          SCU_PLLCON1.B.K1DIV=__SCU_PLLCON1__K1DIV_VALUE;
	ld.bu	d15,0xf000051e
	insert	d15,d15,#2,#0,#7
	st.b	0xf000051e,d15
.L319:

; ..\cstart.c	   376          while(SCU_PLLSTAT.B.K1RDY==0);          /* Wait until K1-Divider is ready to operate */
	lea	a4,0xf0000514
.L4:
	ld.bu	d15,[a4]
	jz.t	d15:4,.L4				; predicted taken
.L320:

; ..\cstart.c	   377  #endif
; ..\cstart.c	   378  #endif
; ..\cstart.c	   379  
; ..\cstart.c	   380  #if defined SCU_PLLCON0 && defined __SCU_PLLCON0_VALUE
; ..\cstart.c	   381  #if     __SCU_PLLCON0_INIT
; ..\cstart.c	   382          SCU_PLLCON0.B.VCOBYP=1;                 /* Enabled the VCO Bypass Mode */
	lea	a5,0xf0000518
	ld.bu	d15,[a5]
	or	d15,#1
	st.b	[a5],d15

; ..\cstart.c	   383          while(SCU_PLLSTAT.B.VCOBYST==0);        /* Wait until prescaler mode is entered */
.L5:
	ld.bu	d15,[a4]
	jz.t	d15:0,.L5				; predicted taken
.L321:

; ..\cstart.c	   384  
; ..\cstart.c	   385  #define __SCU_PLLCON0__VCOPWD_VALUE     ((__SCU_PLLCON0_VALUE>>1)&0x1)
; ..\cstart.c	   386  #define __SCU_PLLCON0__NDIV_VALUE       ((__SCU_PLLCON0_VALUE>>9)&0x7f)
; ..\cstart.c	   387  #define __SCU_PLLCON0__PDIV_VALUE       ((__SCU_PLLCON0_VALUE>>24)&0xf)
; ..\cstart.c	   388          SCU_PLLCON0.B.PDIV=__SCU_PLLCON0__PDIV_VALUE;
	ld.bu	d15,0xf000051b
	insert	d15,d15,#0,#0,#4
	st.b	0xf000051b,d15
.L322:

; ..\cstart.c	   389          SCU_PLLCON0.B.NDIV=__SCU_PLLCON0__NDIV_VALUE;
	mov	d15,#35
	ld.bu	d0,0xf0000519
.L158:
	insert	d15,d0,d15,#1,#7
	st.b	0xf0000519,d15
.L323:

; ..\cstart.c	   390          SCU_PLLCON0.B.VCOPWD=__SCU_PLLCON0__VCOPWD_VALUE; /* power down VCO */
	ld.bu	d15,[a5]
	insert	d15,d15,#0,#1,#1
	st.b	[a5],d15
.L324:

; ..\cstart.c	   391  
; ..\cstart.c	   392  #if __SCU_PLLCON0__VCOPWD_VALUE==0
; ..\cstart.c	   393          /*
; ..\cstart.c	   394           * Configure PLL normal mode.
; ..\cstart.c	   395           */
; ..\cstart.c	   396          SCU_PLLCON0.B.CLRFINDIS=1;              /* Connect VCO to the oscillator */
	ld.bu	d15,[a5]
	or	d15,#32
	st.b	[a5],d15

; ..\cstart.c	   397          while(SCU_PLLSTAT.B.FINDIS==1);         /* Wait until oscillator is connected to the VCO */
.L6:
	ld.bu	d15,[a4]
	jnz.t	d15:3,.L6				; predicted taken
.L325:

; ..\cstart.c	   398          SCU_PLLCON0.B.RESLD=1;                  /* Restart VCO lock detection */
	ld.bu	d15,0xf000051a
	st.t	0xf000051a:2,#1

; ..\cstart.c	   399          while(SCU_PLLSTAT.B.VCOLOCK==0);        /* Wait until the VCO becomes locked */
.L7:
	ld.bu	d15,[a4]
	jz.t	d15:2,.L7				; predicted taken
.L326:

; ..\cstart.c	   400          SCU_PLLCON0.B.VCOBYP=0;                 /* Disable the VCO Bypass Mode */
	ld.bu	d15,[a5]
	insert	d15,d15,#0,#0,#1
	st.b	[a5],d15

; ..\cstart.c	   401          while(SCU_PLLSTAT.B.VCOBYST==1);        /* Wait until normal mode is entered */
.L8:
	ld.bu	d15,[a4]
	jnz.t	d15:0,.L8				; predicted taken
.L327:

; ..\cstart.c	   402  #endif
; ..\cstart.c	   403  #endif
; ..\cstart.c	   404  #endif
; ..\cstart.c	   405  
; ..\cstart.c	   406  #if defined SCU_PLLCON1 && defined __SCU_PLLCON1_VALUE
; ..\cstart.c	   407  #if __SCU_PLLCON1_INIT
; ..\cstart.c	   408  #define __SCU_PLLCON1__K2DIV_VALUE      ((__SCU_PLLCON1_VALUE>>0)&0x3f)
; ..\cstart.c	   409          SCU_PLLCON1.B.K2DIV=__SCU_PLLCON1__K2DIV_VALUE;
	ld.bu	d15,0xf000051c
	insert	d15,d15,#3,#0,#7
	st.b	0xf000051c,d15
.L113:

; ..\cstart.c	   865          wdt_con0 = WDT_CON0.U;      (inlined)
	ld.w	d0,[a15]
.L155:

; ..\cstart.c	   866          wdt_con1 = WDT_CON1.U;      (inlined)
	movh.a	a14,#@his(.L359)
	lea	a14,[a14]@los(.L359)
	j	.cocofun_3
.L359:
.L153:

; ..\cstart.c	   878          wdt_con0 |= 0x03;               /* WDTHPW0=0, WDTLCK=1, ENDINIT=1 */      (inlined)
	or	d15,#3
.L328:

; ..\cstart.c	   879          __isync();      (inlined)
	isync
.L329:

; ..\cstart.c	   880          WDT_CON0.U = wdt_con0;      (inlined)
	st.w	[a15],d15
.L114:

; ..\cstart.c	   410  #endif
; ..\cstart.c	   411  #endif
; ..\cstart.c	   412  
; ..\cstart.c	   413          /*
; ..\cstart.c	   414           * Configure system clock register.
; ..\cstart.c	   415           */
; ..\cstart.c	   416  #if defined STM_CLC && defined __STM_CLC_VALUE
; ..\cstart.c	   417          if(__STM_CLC_INIT)  STM_CLC.U = __STM_CLC_VALUE;        
; ..\cstart.c	   418  #endif
; ..\cstart.c	   419          
; ..\cstart.c	   420          /*
; ..\cstart.c	   421           * Set the ENDINIT bit in the WDT_CON0 register again
; ..\cstart.c	   422           * to enable the write-protection and to prevent a time-out. 
; ..\cstart.c	   423           */
; ..\cstart.c	   424          _endinit_set();
; ..\cstart.c	   425          
; ..\cstart.c	   426          /*
; ..\cstart.c	   427           * Initialize Bus configuration registers:
; ..\cstart.c	   428           * Set register-values according to define's created by the GUI
; ..\cstart.c	   429           * 
; ..\cstart.c	   430           * The recommended sequence of setting registers is as follows:
; ..\cstart.c	   431           * 1.EBUCON
; ..\cstart.c	   432           * 2.All other EBU registers except SDRAM specific registers
; ..\cstart.c	   433           * 3.SDRMCON0
; ..\cstart.c	   434           * 4.SDRMMOD0
; ..\cstart.c	   435           * 5.SDRMREF0
; ..\cstart.c	   436           * 6.SDRMCON1
; ..\cstart.c	   437           * 7.SDRMMOD1
; ..\cstart.c	   438           * 8.SDRMREF1
; ..\cstart.c	   439           */
; ..\cstart.c	   440  #if defined EBU_CON && defined __EBU_CON_VALUE
; ..\cstart.c	   441          if(__EBU_CON_INIT)  EBU_CON.U = __EBU_CON_VALUE;
; ..\cstart.c	   442  #endif
; ..\cstart.c	   443  #if defined EBU_ADDRSEL0 && defined __EBU_ADDRSEL0_VALUE
; ..\cstart.c	   444          if(__EBU_ADDRSEL0_INIT)  EBU_ADDRSEL0.U = __EBU_ADDRSEL0_VALUE;
; ..\cstart.c	   445  #endif
; ..\cstart.c	   446  #if defined EBU_ADDRSEL1 && defined __EBU_ADDRSEL1_VALUE
; ..\cstart.c	   447          if(__EBU_ADDRSEL1_INIT)  EBU_ADDRSEL1.U = __EBU_ADDRSEL1_VALUE;
; ..\cstart.c	   448  #endif
; ..\cstart.c	   449  #if defined EBU_ADDRSEL2 && defined __EBU_ADDRSEL2_VALUE
; ..\cstart.c	   450          if(__EBU_ADDRSEL2_INIT)  EBU_ADDRSEL2.U = __EBU_ADDRSEL2_VALUE;
; ..\cstart.c	   451  #endif
; ..\cstart.c	   452  #if defined EBU_ADDRSEL3 && defined __EBU_ADDRSEL3_VALUE
; ..\cstart.c	   453          if(__EBU_ADDRSEL3_INIT)  EBU_ADDRSEL3.U = __EBU_ADDRSEL3_VALUE;
; ..\cstart.c	   454  #endif
; ..\cstart.c	   455  #if defined EBU_ADDRSEL4 && defined __EBU_ADDRSEL4_VALUE
; ..\cstart.c	   456          if(__EBU_ADDRSEL4_INIT)  EBU_ADDRSEL4.U = __EBU_ADDRSEL4_VALUE;
; ..\cstart.c	   457  #endif
; ..\cstart.c	   458  #if defined EBU_ADDRSEL5 && defined __EBU_ADDRSEL5_VALUE
; ..\cstart.c	   459          if(__EBU_ADDRSEL5_INIT)  EBU_ADDRSEL5.U = __EBU_ADDRSEL5_VALUE;
; ..\cstart.c	   460  #endif
; ..\cstart.c	   461  #if defined EBU_ADDRSEL6 && defined __EBU_ADDRSEL6_VALUE
; ..\cstart.c	   462          if(__EBU_ADDRSEL6_INIT)  EBU_ADDRSEL6.U = __EBU_ADDRSEL6_VALUE;
; ..\cstart.c	   463  #endif
; ..\cstart.c	   464  #if defined EBU_BFCON && defined __EBU_BFCON_VALUE
; ..\cstart.c	   465          if(__EBU_BFCON_INIT)  EBU_BFCON.U = __EBU_BFCON_VALUE;
; ..\cstart.c	   466  #endif
; ..\cstart.c	   467  #if defined EBU_BUSAP0 && defined __EBU_BUSAP0_VALUE
; ..\cstart.c	   468          if(__EBU_BUSAP0_INIT)  EBU_BUSAP0.U = __EBU_BUSAP0_VALUE;
; ..\cstart.c	   469  #endif
; ..\cstart.c	   470  #if defined EBU_BUSAP1 && defined __EBU_BUSAP1_VALUE
; ..\cstart.c	   471          if(__EBU_BUSAP1_INIT)  EBU_BUSAP1.U = __EBU_BUSAP1_VALUE;
; ..\cstart.c	   472  #endif
; ..\cstart.c	   473  #if defined EBU_BUSAP2 && defined __EBU_BUSAP2_VALUE
; ..\cstart.c	   474          if(__EBU_BUSAP2_INIT)  EBU_BUSAP2.U = __EBU_BUSAP2_VALUE;
; ..\cstart.c	   475  #endif
; ..\cstart.c	   476  #if defined EBU_BUSAP3 && defined __EBU_BUSAP3_VALUE
; ..\cstart.c	   477          if(__EBU_BUSAP3_INIT)  EBU_BUSAP3.U = __EBU_BUSAP3_VALUE;
; ..\cstart.c	   478  #endif
; ..\cstart.c	   479  #if defined EBU_BUSAP4 && defined __EBU_BUSAP4_VALUE
; ..\cstart.c	   480          if(__EBU_BUSAP4_INIT)  EBU_BUSAP4.U = __EBU_BUSAP4_VALUE;
; ..\cstart.c	   481  #endif
; ..\cstart.c	   482  #if defined EBU_BUSAP5 && defined __EBU_BUSAP5_VALUE
; ..\cstart.c	   483          if(__EBU_BUSAP5_INIT)  EBU_BUSAP5.U = __EBU_BUSAP5_VALUE;
; ..\cstart.c	   484  #endif
; ..\cstart.c	   485  #if defined EBU_BUSAP6 && defined __EBU_BUSAP6_VALUE
; ..\cstart.c	   486          if(__EBU_BUSAP6_INIT)  EBU_BUSAP6.U = __EBU_BUSAP6_VALUE;
; ..\cstart.c	   487  #endif
; ..\cstart.c	   488  #if defined EBU_BUSCON0 && defined __EBU_BUSCON0_VALUE
; ..\cstart.c	   489          if(__EBU_BUSCON0_INIT)  EBU_BUSCON0.U = __EBU_BUSCON0_VALUE;
; ..\cstart.c	   490  #endif
; ..\cstart.c	   491  #if defined EBU_BUSCON1 && defined __EBU_BUSCON1_VALUE
; ..\cstart.c	   492          if(__EBU_BUSCON1_INIT)  EBU_BUSCON1.U = __EBU_BUSCON1_VALUE;
; ..\cstart.c	   493  #endif
; ..\cstart.c	   494  #if defined EBU_BUSCON2 && defined __EBU_BUSCON2_VALUE
; ..\cstart.c	   495          if(__EBU_BUSCON2_INIT)  EBU_BUSCON2.U = __EBU_BUSCON2_VALUE;
; ..\cstart.c	   496  #endif
; ..\cstart.c	   497  #if defined EBU_BUSCON3 && defined __EBU_BUSCON3_VALUE
; ..\cstart.c	   498          if(__EBU_BUSCON3_INIT)  EBU_BUSCON3.U = __EBU_BUSCON3_VALUE;
; ..\cstart.c	   499  #endif
; ..\cstart.c	   500  #if defined EBU_BUSCON4 && defined __EBU_BUSCON4_VALUE
; ..\cstart.c	   501          if(__EBU_BUSCON4_INIT)  EBU_BUSCON4.U = __EBU_BUSCON4_VALUE;
; ..\cstart.c	   502  #endif
; ..\cstart.c	   503  #if defined EBU_BUSCON5 && defined __EBU_BUSCON5_VALUE
; ..\cstart.c	   504          if(__EBU_BUSCON5_INIT)  EBU_BUSCON5.U = __EBU_BUSCON5_VALUE;
; ..\cstart.c	   505  #endif
; ..\cstart.c	   506  #if defined EBU_BUSCON6 && defined __EBU_BUSCON6_VALUE
; ..\cstart.c	   507          if(__EBU_BUSCON6_INIT)  EBU_BUSCON6.U = __EBU_BUSCON6_VALUE;
; ..\cstart.c	   508  #endif
; ..\cstart.c	   509  #if defined EBU_EMUAS && defined __EBU_EMUAS_VALUE
; ..\cstart.c	   510          if(__EBU_EMUAS_INIT)  EBU_EMUAS.U = __EBU_EMUAS_VALUE;
; ..\cstart.c	   511  #endif
; ..\cstart.c	   512  #if defined EBU_EMUBAP && defined __EBU_EMUBAP_VALUE
; ..\cstart.c	   513          if(__EBU_EMUBAP_INIT)  EBU_EMUBAP.U = __EBU_EMUBAP_VALUE;
; ..\cstart.c	   514  #endif
; ..\cstart.c	   515  #if defined EBU_EMUBC && defined __EBU_EMUBC_VALUE
; ..\cstart.c	   516          if(__EBU_EMUBC_INIT)  EBU_EMUBC.U = __EBU_EMUBC_VALUE;
; ..\cstart.c	   517  #endif
; ..\cstart.c	   518  #if defined EBU_EMUCON && defined __EBU_EMUCON_VALUE
; ..\cstart.c	   519          if(__EBU_EMUCON_INIT)  EBU_EMUCON.U = __EBU_EMUCON_VALUE;
; ..\cstart.c	   520  #endif
; ..\cstart.c	   521  #if defined EBU_EMUOVL && defined __EBU_EMUOVL_VALUE
; ..\cstart.c	   522          if(__EBU_EMUOVL_INIT)  EBU_EMUOVL.U = __EBU_EMUOVL_VALUE;
; ..\cstart.c	   523  #endif
; ..\cstart.c	   524  #if defined EBU_SDRMCON0 && defined __EBU_SDRMCON0_VALUE
; ..\cstart.c	   525          if(__EBU_SDRMCON0_INIT)  EBU_SDRMCON0.U = __EBU_SDRMCON0_VALUE;
; ..\cstart.c	   526  #endif
; ..\cstart.c	   527  #if defined EBU_SDRMOD0 && defined __EBU_SDRMOD0_VALUE
; ..\cstart.c	   528          if(__EBU_SDRMOD0_INIT)  EBU_SDRMOD0.U = __EBU_SDRMOD0_VALUE;
; ..\cstart.c	   529  #endif
; ..\cstart.c	   530  #if defined EBU_SDRMREF0 && defined __EBU_SDRMREF0_VALUE
; ..\cstart.c	   531          if(__EBU_SDRMREF0_INIT)  EBU_SDRMREF0.U = __EBU_SDRMREF0_VALUE;
; ..\cstart.c	   532  #endif
; ..\cstart.c	   533  #if defined EBU_SDRMCON1 && defined __EBU_SDRMCON1_VALUE
; ..\cstart.c	   534          if(__EBU_SDRMCON1_INIT)  EBU_SDRMCON1.U = __EBU_SDRMCON1_VALUE;
; ..\cstart.c	   535  #endif
; ..\cstart.c	   536  #if defined EBU_SDRMOD1 && defined __EBU_SDRMOD1_VALUE
; ..\cstart.c	   537          if(__EBU_SDRMOD1_INIT)  EBU_SDRMOD1.U = __EBU_SDRMOD1_VALUE;
; ..\cstart.c	   538  #endif
; ..\cstart.c	   539  #if defined EBU_SDRMREF1 && defined __EBU_SDRMREF1_VALUE
; ..\cstart.c	   540          if(__EBU_SDRMREF1_INIT)  EBU_SDRMREF1.U = __EBU_SDRMREF1_VALUE;
; ..\cstart.c	   541  #endif
; ..\cstart.c	   542  #if defined CBS_MCDBBS && defined __CBS_MCDBBS_VALUE
; ..\cstart.c	   543          if(__CBS_MCDBBS_INIT)  CBS_MCDBBS .U = __CBS_MCDBBS_VALUE;
; ..\cstart.c	   544  #endif
; ..\cstart.c	   545  #if defined SBCU_CON && defined __SBCU_CON_VALUE
; ..\cstart.c	   546          if(__SBCU_CON_INIT)  SBCU_CON.U = __SBCU_CON_VALUE;
; ..\cstart.c	   547  #endif
; ..\cstart.c	   548  #if defined EBU_BUSRAP1 && defined __EBU_BUSRAP1_VALUE
; ..\cstart.c	   549          if(__EBU_BUSRAP1_INIT)  EBU_BUSRAP1.U = __EBU_BUSRAP1_VALUE;
; ..\cstart.c	   550  #endif
; ..\cstart.c	   551  #if defined EBU_BUSRAP0 && defined __EBU_BUSRAP0_VALUE
; ..\cstart.c	   552          if(__EBU_BUSRAP0_INIT)  EBU_BUSRAP0.U = __EBU_BUSRAP0_VALUE;
; ..\cstart.c	   553  #endif
; ..\cstart.c	   554  #if defined EBU_BUSRAP2 && defined __EBU_BUSRAP2_VALUE
; ..\cstart.c	   555          if(__EBU_BUSRAP2_INIT)  EBU_BUSRAP2.U = __EBU_BUSRAP2_VALUE;
; ..\cstart.c	   556  #endif
; ..\cstart.c	   557  #if defined EBU_BUSRAP3 && defined __EBU_BUSRAP3_VALUE
; ..\cstart.c	   558          if(__EBU_BUSRAP3_INIT)  EBU_BUSRAP3.U = __EBU_BUSRAP3_VALUE;
; ..\cstart.c	   559  #endif
; ..\cstart.c	   560  #if defined EBU_BUSRCON0 && defined __EBU_BUSRCON0_VALUE
; ..\cstart.c	   561          if(__EBU_BUSRCON0_INIT)  EBU_BUSRCON0.U = __EBU_BUSRCON0_VALUE;
; ..\cstart.c	   562  #endif
; ..\cstart.c	   563  #if defined EBU_BUSRCON1 && defined __EBU_BUSRCON1_VALUE
; ..\cstart.c	   564          if(__EBU_BUSRCON1_INIT)  EBU_BUSRCON1.U = __EBU_BUSRCON1_VALUE;
; ..\cstart.c	   565  #endif
; ..\cstart.c	   566  #if defined EBU_BUSRCON2 && defined __EBU_BUSRCON2_VALUE
; ..\cstart.c	   567          if(__EBU_BUSRCON2_INIT)  EBU_BUSRCON2.U = __EBU_BUSRCON2_VALUE;
; ..\cstart.c	   568  #endif
; ..\cstart.c	   569  #if defined EBU_BUSRCON3 && defined __EBU_BUSRCON3_VALUE
; ..\cstart.c	   570          if(__EBU_BUSRCON3_INIT)  EBU_BUSRCON3.U = __EBU_BUSRCON3_VALUE;
; ..\cstart.c	   571  #endif
; ..\cstart.c	   572  #if defined EBU_BUSWAP0 && defined __EBU_BUSWAP0_VALUE
; ..\cstart.c	   573          if(__EBU_BUSWAP0_INIT)  EBU_BUSWAP0.U = __EBU_BUSWAP0_VALUE;
; ..\cstart.c	   574  #endif
; ..\cstart.c	   575  #if defined EBU_BUSWAP1 && defined __EBU_BUSWAP1_VALUE
; ..\cstart.c	   576          if(__EBU_BUSWAP1_INIT)  EBU_BUSWAP1.U = __EBU_BUSWAP1_VALUE;
; ..\cstart.c	   577  #endif
; ..\cstart.c	   578  #if defined EBU_BUSWAP2 && defined __EBU_BUSWAP2_VALUE
; ..\cstart.c	   579          if(__EBU_BUSWAP2_INIT)  EBU_BUSWAP2.U = __EBU_BUSWAP2_VALUE;
; ..\cstart.c	   580  #endif
; ..\cstart.c	   581  #if defined EBU_BUSWAP3 && defined __EBU_BUSWAP3_VALUE
; ..\cstart.c	   582          if(__EBU_BUSWAP3_INIT)  EBU_BUSWAP3.U = __EBU_BUSWAP3_VALUE;
; ..\cstart.c	   583  #endif
; ..\cstart.c	   584  #if defined EBU_BUSWCON0 && defined __EBU_BUSWCON0_VALUE
; ..\cstart.c	   585          if(__EBU_BUSWCON0_INIT)  EBU_BUSWCON0.U = __EBU_BUSWCON0_VALUE;
; ..\cstart.c	   586  #endif
; ..\cstart.c	   587  #if defined EBU_BUSWCON1 && defined __EBU_BUSWCON1_VALUE
; ..\cstart.c	   588          if(__EBU_BUSWCON1_INIT)  EBU_BUSWCON1.U = __EBU_BUSWCON1_VALUE;
; ..\cstart.c	   589  #endif
; ..\cstart.c	   590  #if defined EBU_BUSWCON2 && defined __EBU_BUSWCON2_VALUE
; ..\cstart.c	   591          if(__EBU_BUSWCON2_INIT)  EBU_BUSWCON2.U = __EBU_BUSWCON2_VALUE;
; ..\cstart.c	   592  #endif
; ..\cstart.c	   593  #if defined EBU_BUSWCON3 && defined __EBU_BUSWCON3_VALUE
; ..\cstart.c	   594          if(__EBU_BUSWCON3_INIT)  EBU_BUSWCON3.U = __EBU_BUSWCON3_VALUE;
; ..\cstart.c	   595  #endif
; ..\cstart.c	   596  #if defined EBU_EXTBOOT && defined __EBU_EXTBOOT_VALUE
; ..\cstart.c	   597          if(__EBU_EXTBOOT_INIT)  EBU_EXTBOOT.U = __EBU_EXTBOOT_VALUE;
; ..\cstart.c	   598  #endif
; ..\cstart.c	   599  #if defined EBU_MODCON && defined __EBU_MODCON_VALUE
; ..\cstart.c	   600          if(__EBU_MODCON_INIT)  EBU_MODCON.U = __EBU_MODCON_VALUE;
; ..\cstart.c	   601  #endif
; ..\cstart.c	   602  #if defined EBU_DDRNCON && defined __EBU_DDRNCON_VALUE
; ..\cstart.c	   603          if(__EBU_DDRNCON_INIT)  EBU_DDRNCON.U = __EBU_DDRNCON_VALUE;
; ..\cstart.c	   604  #endif
; ..\cstart.c	   605  #if defined EBU_DDRNMOD && defined __EBU_DDRNMOD_VALUE
; ..\cstart.c	   606          if(__EBU_DDRNMOD_INIT)  EBU_DDRNMOD.U = __EBU_DDRNMOD_VALUE;
; ..\cstart.c	   607  #endif
; ..\cstart.c	   608  #if defined EBU_DDRNMOD2 && defined __EBU_DDRNMOD2_VALUE
; ..\cstart.c	   609          if(__EBU_DDRNMOD2_INIT)  EBU_DDRNMOD2.U = __EBU_DDRNMOD2_VALUE;
; ..\cstart.c	   610  #endif
; ..\cstart.c	   611  #if defined EBU_DDRNPRLD && defined __EBU_DDRNPRLD_VALUE
; ..\cstart.c	   612          if(__EBU_DDRNPRLD_INIT)  EBU_DDRNPRLD.U = __EBU_DDRNPRLD_VALUE;
; ..\cstart.c	   613  #endif
; ..\cstart.c	   614  #if defined EBU_DDRNTAG0 && defined __EBU_DDRNTAG0_VALUE
; ..\cstart.c	   615          if(__EBU_DDRNTAG0_INIT)  EBU_DDRNTAG0.U = __EBU_DDRNTAG0_VALUE;
; ..\cstart.c	   616  #endif
; ..\cstart.c	   617  #if defined EBU_DDRNTAG1 && defined __EBU_DDRNTAG1_VALUE
; ..\cstart.c	   618          if(__EBU_DDRNTAG1_INIT)  EBU_DDRNTAG1.U = __EBU_DDRNTAG1_VALUE;
; ..\cstart.c	   619  #endif
; ..\cstart.c	   620  #if defined EBU_DDRNTAG2 && defined __EBU_DDRNTAG2_VALUE
; ..\cstart.c	   621          if(__EBU_DDRNTAG2_INIT)  EBU_DDRNTAG2.U = __EBU_DDRNTAG2_VALUE;
; ..\cstart.c	   622  #endif
; ..\cstart.c	   623  #if defined EBU_DDRNTAG3 && defined __EBU_DDRNTAG3_VALUE
; ..\cstart.c	   624          if(__EBU_DDRNTAG3_INIT)  EBU_DDRNTAG3.U = __EBU_DDRNTAG3_VALUE;
; ..\cstart.c	   625  #endif
; ..\cstart.c	   626  #if defined EBU_DLLCON && defined __EBU_DLLCON_VALUE
; ..\cstart.c	   627          if(__EBU_DLLCON_INIT)  EBU_DLLCON.U = __EBU_DLLCON_VALUE;
; ..\cstart.c	   628  #endif
; ..\cstart.c	   629  #if defined EBU_SDRMCON && defined __EBU_SDRMCON_VALUE
; ..\cstart.c	   630          if(__EBU_SDRMCON_INIT)  EBU_SDRMCON.U = __EBU_SDRMCON_VALUE;
; ..\cstart.c	   631  #endif
; ..\cstart.c	   632  #if defined EBU_SDRMOD && defined __EBU_SDRMOD_VALUE
; ..\cstart.c	   633          if(__EBU_SDRMOD_INIT)  EBU_SDRMOD.U = __EBU_SDRMOD_VALUE;
; ..\cstart.c	   634  #endif
; ..\cstart.c	   635  #if defined EBU_SDRMREF && defined __EBU_SDRMREF_VALUE
; ..\cstart.c	   636          if(__EBU_SDRMREF_INIT)  EBU_SDRMREF.U = __EBU_SDRMREF_VALUE;
; ..\cstart.c	   637  #endif
; ..\cstart.c	   638  #if defined EBU_SDRSTAT && defined __EBU_SDRSTAT_VALUE
; ..\cstart.c	   639          if(__EBU_SDRSTAT_INIT)  EBU_SDRSTAT.U = __EBU_SDRSTAT_VALUE;
; ..\cstart.c	   640  #endif
; ..\cstart.c	   641  
; ..\cstart.c	   642          /*
; ..\cstart.c	   643           * Inititialize global address registers a0/a1 to support
; ..\cstart.c	   644           * __a0/__a1 storage qualifiers of the C compiler.
; ..\cstart.c	   645           */
; ..\cstart.c	   646  #if __A0A1_INIT
; ..\cstart.c	   647          void * a0 = _SMALL_DATA_;        
; ..\cstart.c	   648          __asm( "mov.aa\ta0,%0"::"a"(a0) );
	movh.a	a15,#@his(_SMALL_DATA_)
	lea	a15,[a15]@los(_SMALL_DATA_)
	mov.aa	a0,a15
.L117:

; ..\cstart.c	   649  
; ..\cstart.c	   650          void * a1 = _LITERAL_DATA_;        
; ..\cstart.c	   651          __asm( "mov.aa\ta1,%0"::"a"(a1) );
	movh.a	a15,#@his(_LITERAL_DATA_)
	lea	a15,[a15]@los(_LITERAL_DATA_)
	mov.aa	a1,a15
.L118:

; ..\cstart.c	   652  #endif
; ..\cstart.c	   653  
; ..\cstart.c	   654          /*
; ..\cstart.c	   655           * Inititialize global address registers a8/a9 to support
; ..\cstart.c	   656           * __a8/__a9 storage qualifiers of the C compiler. A8 and A9
; ..\cstart.c	   657           * are reserved for OS use, or for application use in cases 
; ..\cstart.c	   658           * where the application ans OS are tightly coupled.
; ..\cstart.c	   659           */
; ..\cstart.c	   660  #if __A8A9_INIT
; ..\cstart.c	   661          void * a8 = _A8_DATA_;        
; ..\cstart.c	   662          __asm( "mov.aa\ta8,%0"::"a"(a8) );
	movh.a	a15,#@his(_A8_DATA_)
	lea	a15,[a15]@los(_A8_DATA_)
	mov.aa	a8,a15
.L119:

; ..\cstart.c	   663  
; ..\cstart.c	   664          void * a9 = _A9_DATA_;        
; ..\cstart.c	   665          __asm( "mov.aa\ta9,%0"::"a"(a9) );
	movh.a	a15,#@his(_A9_DATA_)
	lea	a15,[a15]@los(_A9_DATA_)
	mov.aa	a9,a15
.L120:

; ..\cstart.c	   666  #endif
; ..\cstart.c	   667          
; ..\cstart.c	   668          /* Setup the context save area linked list. */
; ..\cstart.c	   669  #if __CSA_INIT
; ..\cstart.c	   670          
; ..\cstart.c	   671          // Still To be Done
; ..\cstart.c	   672          //    - these pointer arrays csa_area_begin/end should be placed in memory, not on the stack
; ..\cstart.c	   673          //      the simulator, however, will generate an error if 'static' is placed in front of the declarations
; ..\cstart.c	   674  #  if !__CPU_TC051_INITIAL__
; ..\cstart.c	   675  #  define MAX_NR_OF_CSA_AREAS     1
; ..\cstart.c	   676  extern int _lc_ub_csa_01[];    /* context save area 1 begin */
; ..\cstart.c	   677  extern int _lc_ue_csa_01[];    /* context save area 1 end   */
; ..\cstart.c	   678          int * csa_area_begin[] = { _lc_ub_csa_01 };        
	movh.a	a15,#@his(.1.ini)
	ld.w	d0,[a15]@los(.1.ini)
.L157:
	st.w	[a10],d0
.L330:

; ..\cstart.c	   679          int * csa_area_end[]   = { _lc_ue_csa_01 };
	movh.a	a15,#@his(.2.ini)
.L331:

; ..\cstart.c	   680  #  else
; ..\cstart.c	   681  #  define MAX_NR_OF_CSA_AREAS     3
; ..\cstart.c	   682  extern int _lc_ub_csa_01[];    /* context save area 1 begin */
; ..\cstart.c	   683  extern int _lc_ue_csa_01[];    /* context save area 1 end   */
; ..\cstart.c	   684  extern int _lc_ub_csa_02[];    /* context save area 2 begin */
; ..\cstart.c	   685  extern int _lc_ue_csa_02[];    /* context save area 2 end   */
; ..\cstart.c	   686  extern int _lc_ub_csa_03[];    /* context save area 3 begin */
; ..\cstart.c	   687  extern int _lc_ue_csa_03[];    /* context save area 3 end   */
; ..\cstart.c	   688          int * csa_area_begin[] = { _lc_ub_csa_01, _lc_ub_csa_02, _lc_ub_csa_03 };        
; ..\cstart.c	   689          int * csa_area_end[]   = { _lc_ue_csa_01, _lc_ue_csa_02, _lc_ue_csa_03 };
; ..\cstart.c	   690  #  endif
; ..\cstart.c	   691  
; ..\cstart.c	   692          int  i, k;
; ..\cstart.c	   693          int  no_of_csas;
; ..\cstart.c	   694          int * csa;
; ..\cstart.c	   695          unsigned int  seg_nr, seg_idx, pcxi_val=0;
	mov	d1,#0
	ld.w	d15,[a15]@los(.2.ini)
.L145:
	st.w	[a10]4,d15
.L332:

; ..\cstart.c	   696          _Bool first=true;
; ..\cstart.c	   697          
; ..\cstart.c	   698          for (i=0; i < MAX_NR_OF_CSA_AREAS; i++)
; ..\cstart.c	   699          {
; ..\cstart.c	   700                  /* first calculate nr of CSAs in this area */
; ..\cstart.c	   701                  no_of_csas = (csa_area_end[i] - csa_area_begin[i]) >> 4;
	sub	d15,d0
	sha	d0,d15,#-6
.L141:

; ..\cstart.c	   702                  
; ..\cstart.c	   703                  for (k=0; k < no_of_csas; k++)
	mov	d3,d1
.L140:
	mov	d2,#1
.L138:
	j	.L9
.L10:

; ..\cstart.c	   704                  {                        
; ..\cstart.c	   705                          csa = csa_area_begin[i] + k*16;
	sha	d15,d3,#6
	ld.a	a15,[a10]
	addsc.a	a15,a15,d15,#0
.L135:

; ..\cstart.c	   706                          /* Store null pointer in last CSA (= very first time!) */
; ..\cstart.c	   707                          *csa = pcxi_val;                        
; ..\cstart.c	   708  
; ..\cstart.c	   709                          seg_nr  = __extru( (int) csa, 28, 4) << 16;
	mov.d	d15,a15
.L136:
	st.w	[a15],d1
.L333:
	extr.u	d1,d15,#28,#4
.L146:
	sha	d1,d1,#16
.L147:

; ..\cstart.c	   710                          seg_idx = __extru( (int) csa, 6, 16);
	extr.u	d15,d15,#6,#16
.L137:

; ..\cstart.c	   711                          pcxi_val = seg_nr | seg_idx;
	or	d1,d15
.L148:

; ..\cstart.c	   712                          if (first)
	jeq	d2,#0,.L11				; predicted taken
.L334:

; ..\cstart.c	   713                          {
; ..\cstart.c	   714                                  first = false;                                
	mov	d2,#0
.L335:

; ..\cstart.c	   715                                  __mtcr(LCX, pcxi_val);
	mtcr	#65084,d1
	isync
.L11:
	add	d3,#1
.L9:
	jlt	d3,d0,.L10				; predicted taken
.L336:

; ..\cstart.c	   716                          }                        
; ..\cstart.c	   717                  }
; ..\cstart.c	   718                  __mtcr(FCX, pcxi_val);
	mtcr	#65080,d1
	isync
.L337:

; ..\cstart.c	   719          }
; ..\cstart.c	   720  #endif
; ..\cstart.c	   721          
; ..\cstart.c	   722          /*
; ..\cstart.c	   723           * PMU_TC.004 workaround:
; ..\cstart.c	   724           * The split mode is disabled on the LMB bus to workaround.
; ..\cstart.c	   725           */
; ..\cstart.c	   726  #if __PMU_TC004_INITIAL__  && defined LFI_CON
; ..\cstart.c	   727          LFI_CON.U &= 0xfffffffe;        
; ..\cstart.c	   728  #endif
; ..\cstart.c	   729          
; ..\cstart.c	   730          /*
; ..\cstart.c	   731           * Initialize and clear C variables.
; ..\cstart.c	   732           */
; ..\cstart.c	   733  #if __C_INIT
; ..\cstart.c	   734          _c_init();      /* initialize data */
	call	_c_init
.L139:

; ..\cstart.c	   735  #endif  
; ..\cstart.c	   736  
; ..\cstart.c	   737          /*
; ..\cstart.c	   738           * initialize __clocks_per_sec,
; ..\cstart.c	   739           * the oscillator frequency is defined by __fOSC.
; ..\cstart.c	   740           */
; ..\cstart.c	   741  #if __CLOCKS_PER_SEC_INIT
; ..\cstart.c	   742          setclockpersec();
	call	setclockpersec
.L338:

; ..\cstart.c	   743  #endif  
; ..\cstart.c	   744  
; ..\cstart.c	   745          /* initialize profiling if required 
; ..\cstart.c	   746           */        
; ..\cstart.c	   747  #if __PROF_ENABLE__
; ..\cstart.c	   748          __prof_init();
; ..\cstart.c	   749  #endif
; ..\cstart.c	   750  
; ..\cstart.c	   751          /*
; ..\cstart.c	   752           * Call a user function within one can initialize the 
; ..\cstart.c	   753           * registers protected via the EndInit feature.
; ..\cstart.c	   754           * Beware that protected registers are unlocked 
; ..\cstart.c	   755           * for the duration of the Time-out Period only!
; ..\cstart.c	   756           */
; ..\cstart.c	   757  #ifdef _CALL_ENDINIT
; ..\cstart.c	   758          _endinit_clear();  /* disable the write-protection */
; ..\cstart.c	   759          _endinit();        
; ..\cstart.c	   760          _endinit_set();    /* enable the write-protection  */
; ..\cstart.c	   761  #endif
; ..\cstart.c	   762          
; ..\cstart.c	   763          /*
; ..\cstart.c	   764           * Call a user function before starting main().
; ..\cstart.c	   765           */
; ..\cstart.c	   766  #if defined __CALL_INIT
; ..\cstart.c	   767          _call_init();        
; ..\cstart.c	   768  #endif
; ..\cstart.c	   769  
; ..\cstart.c	   770          /*
; ..\cstart.c	   771           * Call C main program.
; ..\cstart.c	   772           */
; ..\cstart.c	   773  #if __USE_ARGC_ARGV
; ..\cstart.c	   774          exit( main( _argcv( argcv, __ARGCV_BUFSIZE ), (char **)argcv ) );
; ..\cstart.c	   775  #else
; ..\cstart.c	   776          exit( main( 0, NULL ) );                /* argc is 0 */
	mov	d4,#0
	mov.a	a4,#0
	call	main
.L339:
	mov	d4,d2
	j	exit
.L94:
	
___start_function_end:
	.size	_start,___start_function_end-_start
.L65:
	; End of function
	
	.sdecl	'.text.cstart..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.cstart..cocofun_3'
	.align	2
; Function .cocofun_3
.L23:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0

; ..\cstart.c	   831          wdt_con0 &= 0xffffff01;         /* clear WDTLCK, WDTHPW0, WDTHPW1 */      (inlined)
	insert	d15,d0,#0,#1,#7

; ..\cstart.c	   829          wdt_con1 = WDT_CON1.U;      (inlined)
	ld.w	d1,[a2]
.L144:

; ..\cstart.c	   832          wdt_con0 |= 0xf0;               /* set WDTHPW1 to 0xf */      (inlined)
	or	d15,#240
.L344:

; ..\cstart.c	   833          wdt_con1 &= 0x0c;               /* copy of WDT_CON1_WDTDR and WDT_CON1_WDTIR (d1) */      (inlined)
	and	d0,d1,#12
.L156:

; ..\cstart.c	   835          WDT_CON0.U = wdt_con0;      (inlined)
	or	d15,d0
	st.w	[a15],d15
.L345:

; ..\cstart.c	   841          wdt_con0 &= 0xfffffff0;         /* clear WDTHPW0, WDTLCK, ENDINIT  */      (inlined)
	insert	d15,d15,#0,#0,#4
.L346:
	ji	a14
.L70:
	; End of function
	.sdecl	'.text.cstart._endinit_clear',code,cluster('_endinit_clear')
	.sect	'.text.cstart._endinit_clear'
	.align	2
	
	.global	_endinit_clear

; ..\cstart.c	   777  #endif
; ..\cstart.c	   778  
; ..\cstart.c	   779          /*
; ..\cstart.c	   780           * Default trap vectors are resolved from the C-library.
; ..\cstart.c	   781           */
; ..\cstart.c	   782  #if __BTV_INIT
; ..\cstart.c	   783  #  if __RESOLVE_TRAP_0
; ..\cstart.c	   784  #    pragma extern  _trapmmu
; ..\cstart.c	   785  #  endif
; ..\cstart.c	   786  #  if __RESOLVE_TRAP_1
; ..\cstart.c	   787  #    pragma extern  _trapprotection
; ..\cstart.c	   788  #  endif
; ..\cstart.c	   789  #  if __RESOLVE_TRAP_2
; ..\cstart.c	   790  #    pragma extern  _trapinstruction
; ..\cstart.c	   791  #  endif
; ..\cstart.c	   792  #  if __RESOLVE_TRAP_3
; ..\cstart.c	   793  #    pragma extern  _trapcontext
; ..\cstart.c	   794  #  endif
; ..\cstart.c	   795  #  if __RESOLVE_TRAP_4
; ..\cstart.c	   796  #    pragma extern  _trapbus
; ..\cstart.c	   797  #  endif
; ..\cstart.c	   798  #  if __RESOLVE_TRAP_5
; ..\cstart.c	   799  #    pragma extern  _trapassertion
; ..\cstart.c	   800  #  endif
; ..\cstart.c	   801  #  if __RESOLVE_TRAP_6
; ..\cstart.c	   802  #    pragma extern  _trapsystem
; ..\cstart.c	   803  #  endif
; ..\cstart.c	   804  #  if __RESOLVE_TRAP_7
; ..\cstart.c	   805  #    pragma extern  _trapnmi
; ..\cstart.c	   806  #  endif
; ..\cstart.c	   807  #endif
; ..\cstart.c	   808          
; ..\cstart.c	   809  }
; ..\cstart.c	   810  
; ..\cstart.c	   811  /**************************************************************************
; ..\cstart.c	   812   *
; ..\cstart.c	   813   * FUNCTION:     _endinit_clear
; ..\cstart.c	   814   *
; ..\cstart.c	   815   * DESCRIPTION:  Clears the ENDINIT bit in the WDT_CON0 register in order
; ..\cstart.c	   816   *               to disable the write-protection for registers protected
; ..\cstart.c	   817   *               via the EndInit feature (ie. WDT_CON1, BTV, BIV, ISP,
; ..\cstart.c	   818   *               mod_CLC).
; ..\cstart.c	   819   *
; ..\cstart.c	   820   *************************************************************************/
; ..\cstart.c	   821  void inline _endinit_clear()
; Function _endinit_clear
.L25:
_endinit_clear:	.type	func

; ..\cstart.c	   822  {
; ..\cstart.c	   823          unsigned int wdt_con0, wdt_con1;
; ..\cstart.c	   824  
; ..\cstart.c	   825          /*
; ..\cstart.c	   826           * 1st step: Password access (create password and send to WDT_CON0)
; ..\cstart.c	   827           */        
; ..\cstart.c	   828          wdt_con0 = WDT_CON0.U;
	movh.a	a14,#@his(.L360)
	lea	a14,[a14]@los(.L360)
	j	.cocofun_4
.L360:
.L159:

; ..\cstart.c	   829          wdt_con1 = WDT_CON1.U;
; ..\cstart.c	   830  
; ..\cstart.c	   831          wdt_con0 &= 0xffffff01;         /* clear WDTLCK, WDTHPW0, WDTHPW1 */
; ..\cstart.c	   832          wdt_con0 |= 0xf0;               /* set WDTHPW1 to 0xf */
; ..\cstart.c	   833          wdt_con1 &= 0x0c;               /* copy of WDT_CON1_WDTDR and WDT_CON1_WDTIR (d1) */
; ..\cstart.c	   834          wdt_con0 |= wdt_con1;           /* set WDTHPW1 to 0xf */
; ..\cstart.c	   835          WDT_CON0.U = wdt_con0;
; ..\cstart.c	   836  
; ..\cstart.c	   837          /*
; ..\cstart.c	   838           * 2nd step: Modify access, set the bit ENDINIT to 0 to allow access to
; ..\cstart.c	   839           *           registers: WDT_CON1, BTV, BIV, ISP and mod_CLC
; ..\cstart.c	   840           */
; ..\cstart.c	   841          wdt_con0 &= 0xfffffff0;         /* clear WDTHPW0, WDTLCK, ENDINIT  */
; ..\cstart.c	   842          wdt_con0 |= 0x02;               /* WDTHPW0=0, WDTLCK=1, ENDINIT=0 */
	or	d15,#2
.L261:

; ..\cstart.c	   843          __isync();
	isync
.L262:

; ..\cstart.c	   844          WDT_CON0.U = wdt_con0;          
	st.w	[a15],d15
.L263:

; ..\cstart.c	   845          WDT_CON0.U;                     /* read is required */
	ld.w	d15,[a15]
.L160:

; ..\cstart.c	   846  }
	ret
.L77:
	
___endinit_clear_function_end:
	.size	_endinit_clear,___endinit_clear_function_end-_endinit_clear
.L40:
	; End of function
	
	.sdecl	'.text.cstart..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.cstart..cocofun_4'
	.align	2
; Function .cocofun_4
.L27:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	lea	a15,0xf00005f0
	ld.w	d0,[a15]
.L162:
	insert	d15,d0,#0,#1,#7
	ld.w	d1,0xf00005f4
.L161:
	and	d0,d1,#12
.L163:
	or	d15,#240
.L351:
	or	d15,d0
	st.w	[a15],d15
.L352:
	insert	d15,d15,#0,#0,#4
.L353:
	ji	a14
.L75:
	; End of function
	.sdecl	'.text.cstart._endinit_set',code,cluster('_endinit_set')
	.sect	'.text.cstart._endinit_set'
	.align	2
	
	.global	_endinit_set

; ..\cstart.c	   847  
; ..\cstart.c	   848  /**************************************************************************
; ..\cstart.c	   849   *
; ..\cstart.c	   850   * FUNCTION:     _endinit_set
; ..\cstart.c	   851   *
; ..\cstart.c	   852   * DESCRIPTION:  Sets the ENDINIT bit in the WDT_CON0 register in order
; ..\cstart.c	   853   *               to enable the write-protection for registers protected
; ..\cstart.c	   854   *               via the EndInit feature (ie. WDT_CON1, BTV, BIV, ISP,
; ..\cstart.c	   855   *               mod_CLC).
; ..\cstart.c	   856   *
; ..\cstart.c	   857   *************************************************************************/
; ..\cstart.c	   858  void inline _endinit_set()
; Function _endinit_set
.L29:
_endinit_set:	.type	func

; ..\cstart.c	   859  {
; ..\cstart.c	   860          unsigned int wdt_con0, wdt_con1;
; ..\cstart.c	   861  
; ..\cstart.c	   862          /*
; ..\cstart.c	   863           * 1st step: Password access (create password and send to WDT_CON0)
; ..\cstart.c	   864           */        
; ..\cstart.c	   865          wdt_con0 = WDT_CON0.U;
	movh.a	a14,#@his(.L361)
	lea	a14,[a14]@los(.L361)
	j	.cocofun_4
.L361:
.L164:

; ..\cstart.c	   866          wdt_con1 = WDT_CON1.U;
; ..\cstart.c	   867  
; ..\cstart.c	   868          wdt_con0 &= 0xffffff01;         /* clear WDTLCK, WDTHPW0, WDTHPW1 */
; ..\cstart.c	   869          wdt_con0 |= 0xf0;               /* set WDTHPW1 to 0xf */
; ..\cstart.c	   870          wdt_con1 &= 0x0c;               /* copy of WDT_CON1_WDTDR and WDT_CON1_WDTIR (d1) */
; ..\cstart.c	   871          wdt_con0 |= wdt_con1;           /* set WDTHPW1 to 0xf */
; ..\cstart.c	   872          WDT_CON0.U = wdt_con0;
; ..\cstart.c	   873  
; ..\cstart.c	   874          /*
; ..\cstart.c	   875           * 2nd step: Modify access, set the bit ENDINIT to 1
; ..\cstart.c	   876           */
; ..\cstart.c	   877          wdt_con0 &= 0xfffffff0;         /* clear WDTHPW0, WDTLCK, ENDINIT  */
; ..\cstart.c	   878          wdt_con0 |= 0x03;               /* WDTHPW0=0, WDTLCK=1, ENDINIT=1 */
	or	d15,#3
.L268:

; ..\cstart.c	   879          __isync();
	isync
.L269:

; ..\cstart.c	   880          WDT_CON0.U = wdt_con0;
	st.w	[a15],d15
.L270:

; ..\cstart.c	   881  }
	ret
.L84:
	
___endinit_set_function_end:
	.size	_endinit_set,___endinit_set_function_end-_endinit_set
.L45:
	; End of function
	
	.sdecl	'.text.cstart.setclockpersec',code,cluster('setclockpersec')
	.sect	'.text.cstart.setclockpersec'
	.align	2
	

; ..\cstart.c	   882  
; ..\cstart.c	   883  #if     __CLOCKS_PER_SEC_INIT
; ..\cstart.c	   884  static void setclockpersec(void)
; Function setclockpersec
.L31:
setclockpersec:	.type	func

; ..\cstart.c	   885  {
; ..\cstart.c	   886          unsigned long long hz = 0;
; ..\cstart.c	   887  
; ..\cstart.c	   888  #if defined PLL_CLC && defined __fOSC
; ..\cstart.c	   889  #if ( defined _REGTC11IB_H )
; ..\cstart.c	   890  #define K       (PLL_CLC.B.PLL1_KDIV+1)
; ..\cstart.c	   891          if ( PLL_CLC.B.PLL1_BP )                 /* PLL Bypass Operation */
; ..\cstart.c	   892          {
; ..\cstart.c	   893                  hz = __fOSC;
; ..\cstart.c	   894          }
; ..\cstart.c	   895          else
; ..\cstart.c	   896          {
; ..\cstart.c	   897                  if ( PLL_CLC.B.PLL1_VCOBP )         /* VCO Bypass Operation */
; ..\cstart.c	   898                  {
; ..\cstart.c	   899                          hz = __fOSC/K;
; ..\cstart.c	   900                  }
; ..\cstart.c	   901                  else                            /* PLL Operation */
; ..\cstart.c	   902                  {
; ..\cstart.c	   903                          hz = (16*__fOSC)/K;
; ..\cstart.c	   904                  }
; ..\cstart.c	   905          }
; ..\cstart.c	   906  #endif
; ..\cstart.c	   907  
; ..\cstart.c	   908  #if     (  defined _REGTC1100_H || defined _REGTC1115_H || defined _REGTC1130_H || defined _REGTC1161_H \ 
; ..\cstart.c	   909          || defined _REGTC1162_H || defined _REGTC1163_H || defined _REGTC1164_H || defined _REGTC1165_H \ 
; ..\cstart.c	   910          || defined _REGTC1166_H || defined _REGTC1762_H || defined _REGTC1764_H || defined _REGTC1766_H \ 
; ..\cstart.c	   911          || defined _REGTC1766B_H || defined _REGTC1792_H || defined _REGTC1796_H || defined _REGTC1796B_H )
; ..\cstart.c	   912  #define P               (PLL_CLC.B.PDIV+1)
; ..\cstart.c	   913  #define N               (PLL_CLC.B.NDIV+1)
; ..\cstart.c	   914  #define K               (PLL_CLC.B.KDIV+1)
; ..\cstart.c	   915  #if     ( defined _REGTC1100_H || defined _REGTC1115_H  || defined _REGTC1130_H )
; ..\cstart.c	   916  #define __SYSFS__       SYSFSL
; ..\cstart.c	   917  #else
; ..\cstart.c	   918  #if     (  defined _REGTC1762_H || defined _REGTC1764_H || defined _REGTC1766B_H || defined _REGTC1161_H \ 
; ..\cstart.c	   919          || defined _REGTC1162_H || defined _REGTC1163_H || defined _REGTC1164_H || defined _REGTC1165_H \ 
; ..\cstart.c	   920          || defined _REGTC1166_H )
; ..\cstart.c	   921  #define __SYSFS__       RSV
; ..\cstart.c	   922  #else
; ..\cstart.c	   923  #define __SYSFS__       SYSFS
; ..\cstart.c	   924  #endif
; ..\cstart.c	   925  #endif
; ..\cstart.c	   926  #define SYSCLK(CPUCLK)  (CPUCLK/(2-PLL_CLC.B.__SYSFS__))
; ..\cstart.c	   927  #define STMCLK(CPUCLK)  (SYSCLK(CPUCLK)/STM_CLC.B.RMC)
; ..\cstart.c	   928  #define FVCOBASE        __fOSC
; ..\cstart.c	   929          if ( PLL_CLC.B.BYPPIN )                                                         /* Direct drive */
; ..\cstart.c	   930          {
; ..\cstart.c	   931                  hz = STMCLK(__fOSC);
; ..\cstart.c	   932          }
; ..\cstart.c	   933          else
; ..\cstart.c	   934          {
; ..\cstart.c	   935                  if ( PLL_CLC.B.VCOBYP )                                                 /* VCO Bypass Mode */
; ..\cstart.c	   936                  {
; ..\cstart.c	   937                          hz = STMCLK(__fOSC/(P*K));
; ..\cstart.c	   938                  }
; ..\cstart.c	   939                  else
; ..\cstart.c	   940                  {
; ..\cstart.c	   941                          if ( !PLL_CLC.B.OSCDISC && PLL_CLC.B.LOCK )     /* PLL Mode */
; ..\cstart.c	   942                          {
; ..\cstart.c	   943                                  hz = STMCLK((N*__fOSC)/(P*K));
; ..\cstart.c	   944                          }
; ..\cstart.c	   945                          else                                                                            /* PLL base mode */
; ..\cstart.c	   946                          {
; ..\cstart.c	   947                                  hz = STMCLK(FVCOBASE/K);
; ..\cstart.c	   948                          }
; ..\cstart.c	   949                  }
; ..\cstart.c	   950          }
; ..\cstart.c	   951  #endif
; ..\cstart.c	   952  #endif
; ..\cstart.c	   953  
; ..\cstart.c	   954  #if defined SCU_PLLSTAT && defined __fOSC
; ..\cstart.c	   955  #if     (  defined _REGTC1167_H || defined _REGTC1197_H || defined _REGTC1337_H || defined _REGTC1367_H \ 
; ..\cstart.c	   956          || defined _REGTC1387_H || defined _REGTC1732_H || defined _REGTC1728_H || defined _REGTC1734_H \ 
; ..\cstart.c	   957          || defined _REGTC1735_H || defined _REGTC1736_H || defined _REGTC1738_H || defined _REGTC1746_H \ 
; ..\cstart.c	   958          || defined _REGTC1747_H || defined _REGTC1748_H || defined _REGTC1767_H || defined _REGTC1768_H \ 
; ..\cstart.c	   959          || defined _REGTC1782_H || defined _REGTC1784_H || defined _REGTC1184_H || defined _REGTC1797_H \ 
; ..\cstart.c	   960          || defined _REGTC1791_H || defined _REGTC1793_H || defined _REGTC1798_H || defined _REGTC1724_H )
; ..\cstart.c	   961  #define P               (SCU_PLLCON0.B.PDIV+1)
; ..\cstart.c	   962  #define N               (SCU_PLLCON0.B.NDIV+1)
; ..\cstart.c	   963  #define K1              (SCU_PLLCON1.B.K1DIV+1)
; ..\cstart.c	   964  #define K2              (SCU_PLLCON1.B.K2DIV+1)
; ..\cstart.c	   965  #if     ( defined _REGTC1337_H || defined _REGTC1367_H || defined _REGTC1387_H || defined _REGTC1768_H )
; ..\cstart.c	   966  #define SYSCLK(CPUCLK)  (CPUCLK)
; ..\cstart.c	   967  #else
; ..\cstart.c	   968  #define SYSCLK(CPUCLK)  (CPUCLK/(SCU_CCUCON0.B.FPIDIV+1))       
; ..\cstart.c	   969  #endif
; ..\cstart.c	   970  #define STMCLK(CPUCLK)  (SYSCLK(CPUCLK)/STM_CLC.B.RMC)
; ..\cstart.c	   971  #define FVCOBASE        __fOSC
; ..\cstart.c	   972          if ( SCU_PLLSTAT.B.VCOBYST )    /* Prescaler mode */
	lea	a15,0xf0000514
	ld.bu	d15,[a15]
	jz.t	d15:0,.L12				; predicted taken
.L275:

; ..\cstart.c	   973          {
; ..\cstart.c	   974                  hz = STMCLK(__fOSC/K1);
	ld.bu	d15,0xf0000530
	and	d15,#15
	add	d8,d15,#1
	ld.bu	d15,0xf0000201
	and	d9,d15,#7
.L276:
	mov.u	d4,#11520
	addih	d4,d4,#305
	ld.bu	d15,0xf000051e
	and	d15,#127
	add	d5,d15,#1
	call	__rt_sdivmod
	mov	d4,d2
	mov	d5,d8
	call	__rt_sdivmod
	mov	d4,d2
	mov	d5,d9
.L277:
	j	.L13
.L12:

; ..\cstart.c	   975          }
; ..\cstart.c	   976          else
; ..\cstart.c	   977          {
; ..\cstart.c	   978                  if ( SCU_PLLSTAT.B.FINDIS )     /* Free running mode */
	mov.u	d4,#11520
	ld.bu	d15,[a15]
	addih	d4,d4,#305
	lea	a2,0xf0000530
	lea	a4,0xf0000201
	lea	a5,0xf000051c
	jz.t	d15:3,.L14				; prediction unknown
.L278:

; ..\cstart.c	   979                  {
; ..\cstart.c	   980                          hz = STMCLK(FVCOBASE/K2);
	ld.bu	d15,[a2]
	and	d15,#15
	add	d8,d15,#1
	ld.bu	d15,[a4]
.L279:
	and	d9,d15,#7
	ld.bu	d15,[a5]
	and	d15,#127
	add	d5,d15,#1
	call	__rt_sdivmod
	mov	d4,d2
	mov	d5,d8
	call	__rt_sdivmod
	mov	d4,d2
	mov	d5,d9
.L280:
	j	.L15
.L14:

; ..\cstart.c	   981                  }
; ..\cstart.c	   982                  else                                            /* Normal mode */
; ..\cstart.c	   983                  {
; ..\cstart.c	   984                          hz = STMCLK((N*__fOSC)/(P*K2));
	ld.bu	d15,[a5]
	and	d15,#127
	add	d5,d15,#1
	ld.bu	d15,0xf000051b
	and	d15,#15
	add	d15,#1
	mul	d5,d15
	ld.bu	d15,[a2]
	and	d15,#15
	add	d8,d15,#1
	ld.bu	d15,[a4]
.L281:
	and	d15,#7
	ld.bu	d0,0xf0000519
	extr.u	d0,d0,#1,#7
	madd	d4,d4,d0,d4
	call	__rt_sdivmod
	mov	d4,d2
	mov	d5,d8
	call	__rt_sdivmod
	mov	d4,d2
	mov	d5,d15
.L13:
.L15:
	call	__rt_sdivmod
	extr	d5,d2,#31,#1
	mov	d4,d2
.L165:

; ..\cstart.c	   985                  }
; ..\cstart.c	   986          }
; ..\cstart.c	   987  #endif
; ..\cstart.c	   988  #endif
; ..\cstart.c	   989          setfoschz ( hz );
	j	setfoschz
.L89:
	
__setclockpersec_function_end:
	.size	setclockpersec,__setclockpersec_function_end-setclockpersec
.L50:
	; End of function
	
	.sdecl	'.rodata.cstart..1.ini',data,rom
	.sect	'.rodata.cstart..1.ini'
	.align	4
.1.ini:	.type	object
	.size	.1.ini,4
	.word	_lc_ub_csa_01
	.sdecl	'.rodata.cstart..2.ini',data,rom
	.sect	'.rodata.cstart..2.ini'
	.align	4
.2.ini:	.type	object
	.size	.2.ini,4
	.word	_lc_ue_csa_01
	.calls	'setclockpersec','__rt_sdivmod'
	.calls	'_start','_c_init'
	.calls	'_start','setclockpersec'
	.calls	'_start','main'
	.calls	'_start','exit'
	.calls	'setclockpersec','setfoschz'
	.calls	'_start','.cocofun_3'
	.calls	'_endinit_clear','.cocofun_4'
	.calls	'_endinit_set','.cocofun_4'
	.calls	'_START','',0
	.calls	'__init_sp','',0
	.calls	'_start','',8
	.calls	'.cocofun_3','',0
	.calls	'_endinit_clear','',0
	.calls	'.cocofun_4','',0
	.calls	'_endinit_set','',0
	.weak	exit
	.extern	exit
	.extern	_Exit
	.extern	_lc_ue_ustack
	.extern	_lc_ue_istack
	.extern	_lc_u_int_tab
	.extern	_lc_u_trap_tab
	.extern	_SMALL_DATA_
	.extern	_LITERAL_DATA_
	.extern	_A8_DATA_
	.extern	_A9_DATA_
	.extern	_c_init
	.extern	main
	.extern	setfoschz
	.extern	_lc_ub_csa_01
	.extern	_lc_ue_csa_01
	.extern	_trapmmu
	.extern	_trapprotection
	.extern	_trapinstruction
	.extern	_trapcontext
	.extern	_trapbus
	.extern	_trapassertion
	.extern	_trapsystem
	.extern	_trapnmi
	.extern	__rt_sdivmod
	.calls	'setclockpersec','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L33:
	.word	6428
	.half	3
	.word	.L34
	.byte	4
.L32:
	.byte	1
	.byte	'..\\cstart.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'U:\\Tasking\\workspace\\motEncPot\\Debug\\',0,12,1
	.word	.L35
.L76:
	.byte	2
	.byte	'_endinit_clear',0,3,1,181,6,13,1,1
.L100:
	.byte	3
.L79:
	.byte	4
	.byte	'wdt_con0',0,1,183,6,22
	.word	.L96-.L33
.L81:
	.byte	4
	.byte	'wdt_con1',0,1,183,6,32
	.word	.L96-.L33
	.byte	0,0
.L96:
	.byte	5
	.byte	'unsigned int',0,4,7
.L83:
	.byte	2
	.byte	'_endinit_set',0,3,1,218,6,13,1,1
.L106:
	.byte	3
.L85:
	.byte	4
	.byte	'wdt_con0',0,1,220,6,22
	.word	173
.L87:
	.byte	4
	.byte	'wdt_con1',0,1,220,6,32
	.word	173
	.byte	0,0,6
	.byte	'__extru',0
	.word	.L124-.L33
	.byte	1,1,1,1,7
	.word	.L124-.L33
	.byte	7
	.word	.L124-.L33
	.byte	7
	.word	.L124-.L33
	.byte	0
.L124:
	.byte	5
	.byte	'int',0,4,5,8
	.byte	'__mtcr',0,1,1,1,1,7
	.word	282
	.byte	7
	.word	282
	.byte	0,6
	.byte	'__mfcr',0
	.word	.L166-.L33
	.byte	1,1,1,1,7
	.word	282
	.byte	0
.L166:
	.byte	9
	.word	282
	.byte	10
	.byte	'__isync',0,1,1,1,1,10
	.byte	'__dsync',0,1,1,1,1,11
	.byte	'exit',0,2,90,33,1,1,1,1,12,2,90,44
	.word	282
	.byte	0,13
	.byte	'_c_init',0,1,45,13,1,1,1,1
.L90:
	.byte	5
	.byte	'unsigned long long int',0,8,7,14
	.byte	'setfoschz',0,1,63,27
	.word	403
	.byte	1,1,1,1,12,1,63,38
	.word	403
	.byte	0
.L121:
	.byte	15,4
	.word	.L127-.L33
	.byte	16,0,0
.L127:
	.byte	17
	.word	282
.L132:
	.byte	5
	.byte	'_Bool',0,1,2,18
	.byte	'__size_t',0,1,1,1
	.word	173
	.byte	18
	.byte	'__codeptr',0,1,1,1
	.word	.L167-.L33
.L167:
	.byte	17
	.word	.L168-.L33
.L168:
	.byte	19,1,18
	.byte	'size_t',0,2,21,25
	.word	173
	.byte	18
	.byte	'div_t',0,2,39,19
	.word	.L169-.L33
.L169:
	.byte	20,2,36,9,8,21
	.byte	'quot',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'rem',0,4
	.word	282
	.byte	2,35,4,0,18
	.byte	'ldiv_t',0,2,44,19
	.word	.L170-.L33
.L170:
	.byte	20,2,41,9,8,21
	.byte	'quot',0,4
	.word	.L171-.L33
	.byte	2,35,0,21
	.byte	'rem',0,4
	.word	.L171-.L33
	.byte	2,35,4,0
.L171:
	.byte	5
	.byte	'long int',0,4,5,18
	.byte	'lldiv_t',0,2,50,19
	.word	.L172-.L33
.L172:
	.byte	20,2,47,9,16,21
	.byte	'quot',0,8
	.word	.L173-.L33
	.byte	2,35,0,21
	.byte	'rem',0,8
	.word	.L173-.L33
	.byte	2,35,8,0
.L173:
	.byte	5
	.byte	'long long int',0,8,5,18
	.byte	'wchar_t',0,2,104,26
	.word	.L174-.L33
.L174:
	.byte	5
	.byte	'short int',0,2,5,18
	.byte	'DMI_CON_type',0,3,201,1,3
	.word	.L175-.L33
.L175:
	.byte	9
	.word	.L176-.L33
.L176:
	.byte	22,3,189,1,18,4,21
	.byte	'B',0,4
	.word	.L177-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L177:
	.byte	20,3,191,1,2,4,23
	.byte	'DC_SZ_AV',0,4
	.word	.L178-.L33
	.byte	4,28,2,35,0,23
	.byte	'DMEM_SZ_AV',0,4
	.word	.L178-.L33
	.byte	12,16,2,35,0,23
	.byte	'DC_SZ_CFG',0,4
	.word	.L178-.L33
	.byte	4,12,2,35,0,23
	.byte	'DMEM_SZ_CFG',0,4
	.word	.L178-.L33
	.byte	12,0,2,35,0,0
.L178:
	.byte	5
	.byte	'unsigned int',0,4,7,18
	.byte	'PMI_CON0_type',0,3,236,1,3
	.word	.L179-.L33
.L179:
	.byte	9
	.word	.L180-.L33
.L180:
	.byte	22,3,225,1,18,4,21
	.byte	'B',0,4
	.word	.L181-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L181:
	.byte	20,3,227,1,2,4,23
	.byte	'.1.nn',0,4
	.word	902
	.byte	1,31,2,35,0,23
	.byte	'PCBYP',0,4
	.word	902
	.byte	1,30,2,35,0,23
	.byte	'.2.nn',0,4
	.word	902
	.byte	30,0,2,35,0,0,18
	.byte	'PMI_CON1_type',0,3,250,1,3
	.word	.L182-.L33
.L182:
	.byte	9
	.word	.L183-.L33
.L183:
	.byte	22,3,239,1,18,4,21
	.byte	'B',0,4
	.word	.L184-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L184:
	.byte	20,3,241,1,2,4,23
	.byte	'PCINV',0,4
	.word	902
	.byte	1,31,2,35,0,23
	.byte	'PBINV',0,4
	.word	902
	.byte	1,30,2,35,0,23
	.byte	'.1.nn',0,4
	.word	902
	.byte	30,0,2,35,0,0,18
	.byte	'PMI_CON2_type',0,3,137,2,3
	.word	.L185-.L33
.L185:
	.byte	9
	.word	.L186-.L33
.L186:
	.byte	22,3,253,1,18,4,21
	.byte	'B',0,4
	.word	.L187-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L187:
	.byte	20,3,255,1,2,4,23
	.byte	'PC_SZ_AV',0,4
	.word	902
	.byte	4,28,2,35,0,23
	.byte	'PMEM_SZ_AV',0,4
	.word	902
	.byte	12,16,2,35,0,23
	.byte	'PC_SZ_CFG',0,4
	.word	902
	.byte	4,12,2,35,0,23
	.byte	'PMEM_SZ_CFG',0,4
	.word	902
	.byte	12,0,2,35,0,0,18
	.byte	'SCU_CCUCON0_type',0,3,189,2,3
	.word	.L188-.L33
.L188:
	.byte	9
	.word	.L189-.L33
.L189:
	.byte	22,3,174,2,18,4,21
	.byte	'B',0,4
	.word	.L190-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L190:
	.byte	20,3,176,2,2,4,23
	.byte	'FPIDIV',0,1
	.word	.L191-.L33
	.byte	4,4,2,35,0,23
	.byte	'.1.nn',0,1
	.word	.L191-.L33
	.byte	4,0,2,35,0,23
	.byte	'LMBDIV',0,1
	.word	.L191-.L33
	.byte	4,4,2,35,1,23
	.byte	'.2.nn',0,4
	.word	173
	.byte	12,8,2,35,0,23
	.byte	'PCPDIV',0,1
	.word	.L191-.L33
	.byte	4,4,2,35,3,23
	.byte	'.3.nn',0,1
	.word	.L191-.L33
	.byte	3,1,2,35,3,23
	.byte	'LCK',0,1
	.word	.L191-.L33
	.byte	1,0,2,35,3,0
.L191:
	.byte	5
	.byte	'unsigned char',0,1,8,18
	.byte	'SCU_OSCCON_type',0,3,200,6,3
	.word	.L192-.L33
.L192:
	.byte	9
	.word	.L193-.L33
.L193:
	.byte	22,3,179,6,18,4,21
	.byte	'B',0,4
	.word	.L194-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L194:
	.byte	20,3,181,6,2,4,23
	.byte	'.1.nn',0,1
	.word	1529
	.byte	1,7,2,35,0,23
	.byte	'PLLLV',0,1
	.word	1529
	.byte	1,6,2,35,0,23
	.byte	'OSCRES',0,1
	.word	1529
	.byte	1,5,2,35,0,23
	.byte	'GAINSEL',0,1
	.word	1529
	.byte	2,3,2,35,0,23
	.byte	'MODE',0,1
	.word	1529
	.byte	2,1,2,35,0,23
	.byte	'SHBY',0,1
	.word	1529
	.byte	1,0,2,35,0,23
	.byte	'PLLHV',0,1
	.word	1529
	.byte	1,7,2,35,1,23
	.byte	'PLLSP',0,1
	.word	1529
	.byte	1,6,2,35,1,23
	.byte	'X1D',0,1
	.word	1529
	.byte	1,5,2,35,1,23
	.byte	'X1DEN',0,1
	.word	1529
	.byte	1,4,2,35,1,23
	.byte	'.2.nn',0,1
	.word	1529
	.byte	4,0,2,35,1,23
	.byte	'OSCVAL',0,1
	.word	1529
	.byte	5,3,2,35,2,23
	.byte	'.3.nn',0,2
	.word	.L195-.L33
	.byte	11,0,2,35,2,0
.L195:
	.byte	5
	.byte	'unsigned short int',0,2,7,18
	.byte	'SCU_PLLCON0_type',0,3,255,6,3
	.word	.L196-.L33
.L196:
	.byte	9
	.word	.L197-.L33
.L197:
	.byte	22,3,233,6,18,4,21
	.byte	'B',0,4
	.word	.L198-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L198:
	.byte	20,3,235,6,2,4,23
	.byte	'VCOBYP',0,1
	.word	1529
	.byte	1,7,2,35,0,23
	.byte	'VCOPWD',0,1
	.word	1529
	.byte	1,6,2,35,0,23
	.byte	'.1.nn',0,1
	.word	1529
	.byte	2,4,2,35,0,23
	.byte	'SETFINDIS',0,1
	.word	1529
	.byte	1,3,2,35,0,23
	.byte	'CLRFINDIS',0,1
	.word	1529
	.byte	1,2,2,35,0,23
	.byte	'OSCDISCDIS',0,1
	.word	1529
	.byte	1,1,2,35,0,23
	.byte	'.2.nn',0,2
	.word	1844
	.byte	2,7,2,35,0,23
	.byte	'NDIV',0,1
	.word	1529
	.byte	7,0,2,35,1,23
	.byte	'PLLPWD',0,1
	.word	1529
	.byte	1,7,2,35,2,23
	.byte	'.3.nn',0,1
	.word	1529
	.byte	1,6,2,35,2,23
	.byte	'RESLD',0,1
	.word	1529
	.byte	1,5,2,35,2,23
	.byte	'.4.nn',0,1
	.word	1529
	.byte	5,0,2,35,2,23
	.byte	'PDIV',0,1
	.word	1529
	.byte	4,4,2,35,3,23
	.byte	'.5.nn',0,1
	.word	1529
	.byte	4,0,2,35,3,0,18
	.byte	'SCU_PLLCON1_type',0,3,142,7,3
	.word	.L199-.L33
.L199:
	.byte	9
	.word	.L200-.L33
.L200:
	.byte	22,3,130,7,18,4,21
	.byte	'B',0,4
	.word	.L201-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L201:
	.byte	20,3,132,7,2,4,23
	.byte	'K2DIV',0,1
	.word	1529
	.byte	7,1,2,35,0,23
	.byte	'.1.nn',0,2
	.word	1844
	.byte	9,0,2,35,0,23
	.byte	'K1DIV',0,1
	.word	1529
	.byte	7,1,2,35,2,23
	.byte	'.2.nn',0,2
	.word	1844
	.byte	9,0,2,35,2,0,18
	.byte	'SCU_PLLERAYSTAT_type',0,3,184,7,3
	.word	.L202-.L33
.L202:
	.byte	9
	.word	.L203-.L33
.L203:
	.byte	22,3,169,7,18,4,21
	.byte	'B',0,4
	.word	.L204-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L204:
	.byte	20,3,171,7,2,4,23
	.byte	'VCOBYST',0,1
	.word	1529
	.byte	1,7,2,35,0,23
	.byte	'PWDSTAT',0,1
	.word	1529
	.byte	1,6,2,35,0,23
	.byte	'VCOLOCK',0,1
	.word	1529
	.byte	1,5,2,35,0,23
	.byte	'FINDIS',0,1
	.word	1529
	.byte	1,4,2,35,0,23
	.byte	'K1RDY',0,1
	.word	1529
	.byte	1,3,2,35,0,23
	.byte	'K2RDY',0,1
	.word	1529
	.byte	1,2,2,35,0,23
	.byte	'.1.nn',0,4
	.word	173
	.byte	26,0,2,35,0,0,18
	.byte	'WDT_CON0_type',0,3,202,9,3
	.word	.L205-.L33
.L205:
	.byte	9
	.word	.L206-.L33
.L206:
	.byte	22,3,188,9,18,4,21
	.byte	'B',0,4
	.word	.L207-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L207:
	.byte	20,3,190,9,2,4,23
	.byte	'ENDINIT',0,1
	.word	1529
	.byte	1,7,2,35,0,23
	.byte	'LCK',0,1
	.word	1529
	.byte	1,6,2,35,0,23
	.byte	'HPW0',0,1
	.word	1529
	.byte	2,4,2,35,0,23
	.byte	'HPW1',0,1
	.word	1529
	.byte	4,0,2,35,0,23
	.byte	'PW',0,1
	.word	1529
	.byte	8,0,2,35,1,23
	.byte	'REL',0,2
	.word	1844
	.byte	16,0,2,35,2,0,18
	.byte	'WDT_CON1_type',0,3,218,9,3
	.word	.L208-.L33
.L208:
	.byte	9
	.word	.L209-.L33
.L209:
	.byte	22,3,205,9,18,4,21
	.byte	'B',0,4
	.word	.L210-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L210:
	.byte	20,3,207,9,2,4,23
	.byte	'CLRIRF',0,1
	.word	1529
	.byte	1,7,2,35,0,23
	.byte	'.1.nn',0,1
	.word	1529
	.byte	1,6,2,35,0,23
	.byte	'IR',0,1
	.word	1529
	.byte	1,5,2,35,0,23
	.byte	'DR',0,1
	.word	1529
	.byte	1,4,2,35,0,23
	.byte	'.2.nn',0,4
	.word	173
	.byte	28,0,2,35,0,0,18
	.byte	'SBCU_CON_type',0,3,240,10,3
	.word	.L211-.L33
.L211:
	.byte	9
	.word	.L212-.L33
.L212:
	.byte	22,3,226,10,18,4,21
	.byte	'B',0,4
	.word	.L213-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L213:
	.byte	20,3,228,10,2,4,23
	.byte	'TOUT',0,2
	.word	1844
	.byte	16,0,2,35,0,23
	.byte	'DBG',0,1
	.word	1529
	.byte	1,7,2,35,2,23
	.byte	'.1.nn',0,1
	.word	1529
	.byte	2,5,2,35,2,23
	.byte	'SPE',0,1
	.word	1529
	.byte	1,4,2,35,2,23
	.byte	'.2.nn',0,1
	.word	1529
	.byte	4,0,2,35,2,23
	.byte	'SPC',0,1
	.word	1529
	.byte	8,0,2,35,3,0,18
	.byte	'PCP_GPR6_type',0,3,204,19,3
	.word	.L214-.L33
.L214:
	.byte	9
	.word	.L215-.L33
.L215:
	.byte	22,3,191,19,18,4,21
	.byte	'B',0,4
	.word	.L216-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L216:
	.byte	20,3,193,19,2,4,23
	.byte	'CNT1',0,4
	.word	902
	.byte	12,20,2,35,0,23
	.byte	'.1.nn',0,4
	.word	902
	.byte	2,18,2,35,0,23
	.byte	'TOS',0,4
	.word	902
	.byte	2,16,2,35,0,23
	.byte	'SRPN',0,4
	.word	902
	.byte	8,8,2,35,0,23
	.byte	'CPPN',0,4
	.word	902
	.byte	8,0,2,35,0,0,18
	.byte	'PCP_GPR7_type',0,3,224,19,3
	.word	.L217-.L33
.L217:
	.byte	9
	.word	.L218-.L33
.L218:
	.byte	22,3,206,19,18,4,21
	.byte	'B',0,4
	.word	.L219-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L219:
	.byte	20,3,208,19,2,4,23
	.byte	'Z',0,4
	.word	902
	.byte	1,31,2,35,0,23
	.byte	'N',0,4
	.word	902
	.byte	1,30,2,35,0,23
	.byte	'C',0,4
	.word	902
	.byte	1,29,2,35,0,23
	.byte	'V',0,4
	.word	902
	.byte	1,28,2,35,0,23
	.byte	'CNZ',0,4
	.word	902
	.byte	1,27,2,35,0,23
	.byte	'IEN',0,4
	.word	902
	.byte	1,26,2,35,0,23
	.byte	'CEN',0,4
	.word	902
	.byte	1,25,2,35,0,23
	.byte	'.1.nn',0,4
	.word	902
	.byte	1,24,2,35,0,23
	.byte	'DPTR',0,4
	.word	902
	.byte	8,16,2,35,0,23
	.byte	'.2.nn',0,4
	.word	902
	.byte	16,0,2,35,0,0,18
	.byte	'EBU_ADDRSEL0_type',0,3,220,28,3
	.word	.L220-.L33
.L220:
	.byte	9
	.word	.L221-.L33
.L221:
	.byte	22,3,205,28,18,4,21
	.byte	'B',0,4
	.word	.L222-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L222:
	.byte	20,3,207,28,2,4,23
	.byte	'REGENAB',0,4
	.word	902
	.byte	1,31,2,35,0,23
	.byte	'ALTENAB',0,4
	.word	902
	.byte	1,30,2,35,0,23
	.byte	'WPROT',0,4
	.word	902
	.byte	1,29,2,35,0,23
	.byte	'RES',0,4
	.word	902
	.byte	1,28,2,35,0,23
	.byte	'MASK',0,4
	.word	902
	.byte	4,24,2,35,0,23
	.byte	'ALTSEG',0,4
	.word	902
	.byte	4,20,2,35,0,23
	.byte	'BASE',0,4
	.word	902
	.byte	20,0,2,35,0,0,18
	.byte	'EBU_BUSRAP0_type',0,3,243,28,3
	.word	.L223-.L33
.L223:
	.byte	9
	.word	.L224-.L33
.L224:
	.byte	22,3,226,28,18,4,21
	.byte	'B',0,4
	.word	.L225-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L225:
	.byte	20,3,228,28,2,4,23
	.byte	'RDDTACS',0,4
	.word	902
	.byte	4,28,2,35,0,23
	.byte	'RDRECOVC',0,4
	.word	902
	.byte	3,25,2,35,0,23
	.byte	'WAITRDC',0,4
	.word	902
	.byte	5,20,2,35,0,23
	.byte	'DATAC',0,4
	.word	902
	.byte	4,16,2,35,0,23
	.byte	'EXTCLOCK',0,4
	.word	902
	.byte	2,14,2,35,0,23
	.byte	'EXTDATA',0,4
	.word	902
	.byte	2,12,2,35,0,23
	.byte	'CMDDELAY',0,4
	.word	902
	.byte	4,8,2,35,0,23
	.byte	'AHOLDC',0,4
	.word	902
	.byte	4,4,2,35,0,23
	.byte	'ADDRC',0,4
	.word	902
	.byte	4,0,2,35,0,0,18
	.byte	'EBU_BUSRCON0_type',0,3,146,29,3
	.word	.L226-.L33
.L226:
	.byte	9
	.word	.L227-.L33
.L227:
	.byte	22,3,249,28,18,4,21
	.byte	'B',0,4
	.word	.L228-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L228:
	.byte	20,3,251,28,2,4,23
	.byte	'FETBLEN',0,4
	.word	902
	.byte	3,29,2,35,0,23
	.byte	'FBBMSEL',0,4
	.word	902
	.byte	1,28,2,35,0,23
	.byte	'BFSSS',0,4
	.word	902
	.byte	1,27,2,35,0,23
	.byte	'FDBKEN',0,4
	.word	902
	.byte	1,26,2,35,0,23
	.byte	'BFCMSEL',0,4
	.word	902
	.byte	1,25,2,35,0,23
	.byte	'NAA',0,4
	.word	902
	.byte	1,24,2,35,0,23
	.byte	'RES1',0,4
	.word	902
	.byte	8,16,2,35,0,23
	.byte	'ECSE',0,4
	.word	902
	.byte	1,15,2,35,0,23
	.byte	'EBSE',0,4
	.word	902
	.byte	1,14,2,35,0,23
	.byte	'DBA',0,4
	.word	902
	.byte	1,13,2,35,0,23
	.byte	'WAITINV',0,4
	.word	902
	.byte	1,12,2,35,0,23
	.byte	'BCGEN',0,4
	.word	902
	.byte	2,10,2,35,0,23
	.byte	'PORTW',0,4
	.word	902
	.byte	2,8,2,35,0,23
	.byte	'WAIT',0,4
	.word	902
	.byte	2,6,2,35,0,23
	.byte	'AAP',0,4
	.word	902
	.byte	1,5,2,35,0,23
	.byte	'RES2',0,4
	.word	902
	.byte	1,4,2,35,0,23
	.byte	'AGEN',0,4
	.word	902
	.byte	4,0,2,35,0,0,18
	.byte	'EBU_BUSWAP0_type',0,3,169,29,3
	.word	.L229-.L33
.L229:
	.byte	9
	.word	.L230-.L33
.L230:
	.byte	22,3,152,29,18,4,21
	.byte	'B',0,4
	.word	.L231-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L231:
	.byte	20,3,154,29,2,4,23
	.byte	'WRDTACS',0,4
	.word	902
	.byte	4,28,2,35,0,23
	.byte	'WRRECOVC',0,4
	.word	902
	.byte	3,25,2,35,0,23
	.byte	'WAITWRC',0,4
	.word	902
	.byte	5,20,2,35,0,23
	.byte	'DATAC',0,4
	.word	902
	.byte	4,16,2,35,0,23
	.byte	'EXTCLOCK',0,4
	.word	902
	.byte	2,14,2,35,0,23
	.byte	'EXTDATA',0,4
	.word	902
	.byte	2,12,2,35,0,23
	.byte	'CMDDELAY',0,4
	.word	902
	.byte	4,8,2,35,0,23
	.byte	'AHOLDC',0,4
	.word	902
	.byte	4,4,2,35,0,23
	.byte	'ADDRC',0,4
	.word	902
	.byte	4,0,2,35,0,0,18
	.byte	'EBU_BUSWCON0_type',0,3,198,29,3
	.word	.L232-.L33
.L232:
	.byte	9
	.word	.L233-.L33
.L233:
	.byte	22,3,175,29,18,4,21
	.byte	'B',0,4
	.word	.L234-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L234:
	.byte	20,3,177,29,2,4,23
	.byte	'FETBLEN',0,4
	.word	902
	.byte	3,29,2,35,0,23
	.byte	'FBBMSEL',0,4
	.word	902
	.byte	1,28,2,35,0,23
	.byte	'RES1',0,4
	.word	902
	.byte	3,25,2,35,0,23
	.byte	'NAA',0,4
	.word	902
	.byte	1,24,2,35,0,23
	.byte	'RES2',0,4
	.word	902
	.byte	8,16,2,35,0,23
	.byte	'ECSE',0,4
	.word	902
	.byte	1,15,2,35,0,23
	.byte	'EBSE',0,4
	.word	902
	.byte	1,14,2,35,0,23
	.byte	'RES3',0,4
	.word	902
	.byte	1,13,2,35,0,23
	.byte	'WAITINV',0,4
	.word	902
	.byte	1,12,2,35,0,23
	.byte	'BCGEN',0,4
	.word	902
	.byte	2,10,2,35,0,23
	.byte	'PORTW',0,4
	.word	902
	.byte	2,8,2,35,0,23
	.byte	'WAIT',0,4
	.word	902
	.byte	2,6,2,35,0,23
	.byte	'AAP',0,4
	.word	902
	.byte	1,5,2,35,0,23
	.byte	'LOCKCS',0,4
	.word	902
	.byte	1,4,2,35,0,23
	.byte	'AGEN',0,4
	.word	902
	.byte	4,0,2,35,0,0,18
	.byte	'EBU_CLC_type',0,3,224,29,3
	.word	.L235-.L33
.L235:
	.byte	9
	.word	.L236-.L33
.L236:
	.byte	22,3,204,29,18,4,21
	.byte	'B',0,4
	.word	.L237-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L237:
	.byte	20,3,206,29,2,4,23
	.byte	'DISR',0,4
	.word	902
	.byte	1,31,2,35,0,23
	.byte	'DISS',0,4
	.word	902
	.byte	1,30,2,35,0,23
	.byte	'.1.nn',0,4
	.word	902
	.byte	6,24,2,35,0,23
	.byte	'EPE',0,4
	.word	902
	.byte	1,23,2,35,0,23
	.byte	'RES1',0,4
	.word	902
	.byte	7,16,2,35,0,23
	.byte	'SYNC',0,4
	.word	902
	.byte	1,15,2,35,0,23
	.byte	'DDR',0,4
	.word	902
	.byte	1,14,2,35,0,23
	.byte	'EBUDIV',0,4
	.word	902
	.byte	2,12,2,35,0,23
	.byte	'SYNCACK',0,4
	.word	902
	.byte	1,11,2,35,0,23
	.byte	'DDRACK',0,4
	.word	902
	.byte	1,10,2,35,0,23
	.byte	'EBUDIVACK',0,4
	.word	902
	.byte	2,8,2,35,0,23
	.byte	'RES2',0,4
	.word	902
	.byte	8,0,2,35,0,0,18
	.byte	'EBU_EXTBOOT_type',0,3,239,29,3
	.word	.L238-.L33
.L238:
	.byte	9
	.word	.L239-.L33
.L239:
	.byte	22,3,227,29,18,4,21
	.byte	'B',0,4
	.word	.L240-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L240:
	.byte	20,3,229,29,2,4,23
	.byte	'CFGEND',0,4
	.word	902
	.byte	1,31,2,35,0,23
	.byte	'CFGERR',0,4
	.word	902
	.byte	1,30,2,35,0,23
	.byte	'RES',0,4
	.word	902
	.byte	29,1,2,35,0,23
	.byte	'EBUCFG',0,4
	.word	902
	.byte	1,0,2,35,0,0,18
	.byte	'EBU_MODCON_type',0,3,144,30,3
	.word	.L241-.L33
.L241:
	.byte	9
	.word	.L242-.L33
.L242:
	.byte	22,3,254,29,18,4,21
	.byte	'B',0,4
	.word	.L243-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L243:
	.byte	20,3,128,30,2,4,23
	.byte	'STS',0,4
	.word	902
	.byte	1,31,2,35,0,23
	.byte	'LCKABRT',0,4
	.word	902
	.byte	1,30,2,35,0,23
	.byte	'RES1',0,4
	.word	902
	.byte	2,28,2,35,0,23
	.byte	'EXTLOCK',0,4
	.word	902
	.byte	1,27,2,35,0,23
	.byte	'ARBSYNC',0,4
	.word	902
	.byte	1,26,2,35,0,23
	.byte	'ARBMODE',0,4
	.word	902
	.byte	2,24,2,35,0,23
	.byte	'TIMEOUTC',0,4
	.word	902
	.byte	8,16,2,35,0,23
	.byte	'LOCK_TIMEOUT',0,4
	.word	902
	.byte	8,8,2,35,0,23
	.byte	'RES2',0,4
	.word	902
	.byte	7,1,2,35,0,23
	.byte	'ALE',0,4
	.word	902
	.byte	1,0,2,35,0,0,18
	.byte	'STM_CLC_type',0,3,194,30,3
	.word	.L244-.L33
.L244:
	.byte	9
	.word	.L245-.L33
.L245:
	.byte	22,3,177,30,18,4,21
	.byte	'B',0,4
	.word	.L246-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L246:
	.byte	20,3,179,30,2,4,23
	.byte	'DISR',0,1
	.word	1529
	.byte	1,7,2,35,0,23
	.byte	'DISS',0,1
	.word	1529
	.byte	1,6,2,35,0,23
	.byte	'SPEN',0,1
	.word	1529
	.byte	1,5,2,35,0,23
	.byte	'EDIS',0,1
	.word	1529
	.byte	1,4,2,35,0,23
	.byte	'SBWE',0,1
	.word	1529
	.byte	1,3,2,35,0,23
	.byte	'FSOE',0,1
	.word	1529
	.byte	1,2,2,35,0,23
	.byte	'.1.nn',0,1
	.word	1529
	.byte	2,0,2,35,0,23
	.byte	'RMC',0,1
	.word	1529
	.byte	3,5,2,35,1,23
	.byte	'.2.nn',0,4
	.word	173
	.byte	21,0,2,35,0,0,18
	.byte	'CBS_MCDBBS_type',0,3,249,32,3
	.word	.L247-.L33
.L247:
	.byte	9
	.word	.L248-.L33
.L248:
	.byte	22,3,218,32,18,4,21
	.byte	'B',0,4
	.word	.L249-.L33
	.byte	2,35,0,21
	.byte	'I',0,4
	.word	282
	.byte	2,35,0,21
	.byte	'U',0,4
	.word	173
	.byte	2,35,0,0
.L249:
	.byte	20,3,220,32,2,4,23
	.byte	'BSSB',0,1
	.word	1529
	.byte	1,7,2,35,0,23
	.byte	'BSDMA',0,1
	.word	1529
	.byte	1,6,2,35,0,23
	.byte	'BSML0',0,1
	.word	1529
	.byte	1,5,2,35,0,23
	.byte	'.1.nn',0,1
	.word	1529
	.byte	1,4,2,35,0,23
	.byte	'BSPCP',0,1
	.word	1529
	.byte	1,3,2,35,0,23
	.byte	'BSTC',0,1
	.word	1529
	.byte	1,2,2,35,0,23
	.byte	'BSPCPEN',0,1
	.word	1529
	.byte	1,1,2,35,0,23
	.byte	'BSHLTEN',0,1
	.word	1529
	.byte	1,0,2,35,0,23
	.byte	'BTMCD',0,1
	.word	1529
	.byte	1,7,2,35,1,23
	.byte	'.2.nn',0,1
	.word	1529
	.byte	3,4,2,35,1,23
	.byte	'BTPCP',0,1
	.word	1529
	.byte	1,3,2,35,1,23
	.byte	'BTTC',0,1
	.word	1529
	.byte	1,2,2,35,1,23
	.byte	'BTPCPEN',0,1
	.word	1529
	.byte	1,1,2,35,1,23
	.byte	'.3.nn',0,1
	.word	1529
	.byte	1,0,2,35,1,23
	.byte	'BSP0',0,1
	.word	1529
	.byte	1,7,2,35,2,23
	.byte	'BSP1',0,1
	.word	1529
	.byte	1,6,2,35,2,23
	.byte	'BTP0',0,1
	.word	1529
	.byte	1,5,2,35,2,23
	.byte	'BTP1',0,1
	.word	1529
	.byte	1,4,2,35,2,23
	.byte	'BTT',0,1
	.word	1529
	.byte	1,3,2,35,2,23
	.byte	'BTPS',0,1
	.word	1529
	.byte	2,1,2,35,2,23
	.byte	'BTSS',0,1
	.word	1529
	.byte	1,0,2,35,2,23
	.byte	'BTTIEN',0,1
	.word	1529
	.byte	1,7,2,35,3,23
	.byte	'.4.nn',0,1
	.word	1529
	.byte	7,0,2,35,3,0,24
	.byte	'_lc_ue_ustack',0,1,35,19
	.word	.L250-.L33
	.byte	1,1
.L250:
	.byte	25
	.word	.L251-.L33
	.byte	26,0
.L251:
	.byte	27
	.byte	'void',0,24
	.byte	'_lc_ue_istack',0,1,36,19
	.word	6200
	.byte	1,1,24
	.byte	'_lc_u_int_tab',0,1,37,19
	.word	6200
	.byte	1,1,24
	.byte	'_lc_u_trap_tab',0,1,38,19
	.word	6200
	.byte	1,1,24
	.byte	'_SMALL_DATA_',0,1,39,19
	.word	6200
	.byte	1,1,24
	.byte	'_LITERAL_DATA_',0,1,40,19
	.word	6200
	.byte	1,1,24
	.byte	'_A8_DATA_',0,1,41,19
	.word	6200
	.byte	1,1,24
	.byte	'_A9_DATA_',0,1,42,19
	.word	6200
	.byte	1,1,24
	.byte	'_lc_ub_csa_01',0,1,164,5,12
	.word	.L252-.L33
	.byte	1,1
.L252:
	.byte	25
	.word	282
	.byte	26,0,24
	.byte	'_lc_ue_csa_01',0,1,165,5,12
	.word	6399
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L34:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	1,0,0,4,52,0,3,8,58,15,59,15,57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,46,1,3,8,73,19,54,15,39,12,63
	.byte	12,60,12,0,0,7,5,0,73,19,0,0,8,46,1,3,8,54,15,39,12,63,12,60,12,0,0,9,53,0,73,19,0,0,10,46,0,3,8,54,15
	.byte	39,12,63,12,60,12,0,0,11,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,12,5,0,58,15,59,15,57
	.byte	15,73,19,0,0,13,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,14,46,1,3,8,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,63,12,60,12,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,15,0,73,19,0,0,18,22,0,3,8
	.byte	58,15,59,15,57,15,73,19,0,0,19,21,0,54,15,0,0,20,19,1,58,15,59,15,57,15,11,15,0,0,21,13,0,3,8,11,15,73
	.byte	19,56,9,0,0,22,23,1,58,15,59,15,57,15,11,15,0,0,23,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,24,52,0,3
	.byte	8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,25,1,1,73,19,0,0,26,33,0,0,0,27,59,0,3,8,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L35:
	.word	.L254-.L253
.L253:
	.half	3
	.word	.L256-.L255
.L255:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\cstart.c',0,0,0,0
	.byte	'C:\\Program Files\\DEVEL\\TriCore v3.5r1\\ctc\\include\\stdlib.h',0,0,0,0
	.byte	'C:\\Program Files\\DEVEL\\TriCore v3.5r1\\ctc\\include\\sfr\\regtc1782.sfr',0,0,0,0,0
.L256:
.L254:
	.sdecl	'.debug_info',debug,cluster('_endinit_clear')
	.sect	'.debug_info'
.L36:
	.word	160
	.half	3
	.word	.L37
	.byte	4,1
	.byte	'..\\cstart.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'U:\\Tasking\\workspace\\motEncPot\\Debug\\',0,12,1
	.word	.L39,.L38
	.byte	2
	.word	.L32
	.byte	3
	.word	.L76
	.byte	1
	.word	.L25,.L77,.L24
	.byte	4
	.word	.L78
	.byte	5
	.word	.L79,.L80
	.byte	5
	.word	.L81,.L82
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('_endinit_clear')
	.sect	'.debug_abbrev'
.L37:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,49,16,63,12,17,1,18,1,64,6
	.byte	0,0,4,11,1,85,6,0,0,5,52,0,49,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('_endinit_clear')
	.sect	'.debug_line'
.L38:
	.word	.L258-.L257
.L257:
	.half	3
	.word	.L260-.L259
.L259:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\cstart.c',0,0,0,0,0
.L260:
	.byte	5,30,7,0,5,2
	.word	.L25
	.byte	3,187,6,1,5,25,9
	.half	.L159-.L25
	.byte	3,14,1,5,18,9
	.half	.L261-.L159
	.byte	3,1,1,5,30,9
	.half	.L262-.L261
	.byte	3,1,1,5,19,9
	.half	.L263-.L262
	.byte	3,1,1,5,1,9
	.half	.L160-.L263
	.byte	3,1,1,7,9
	.half	.L40-.L160
	.byte	0,1,1
.L258:
	.sdecl	'.debug_ranges',debug,cluster('_endinit_clear')
	.sect	'.debug_ranges'
.L39:
	.word	-1,.L25,0,.L40-.L25,0,0
.L78:
	.word	-1,.L25,0,.L77-.L25,-1,.L27,0,.L75-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('_endinit_set')
	.sect	'.debug_info'
.L41:
	.word	164
	.half	3
	.word	.L42
	.byte	4,1
	.byte	'..\\cstart.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'U:\\Tasking\\workspace\\motEncPot\\Debug\\',0,12,1
	.word	.L44,.L43
	.byte	2
	.word	.L32
	.byte	3
	.word	.L83
	.byte	1
	.word	.L29,.L84,.L28
	.byte	4
	.word	.L29,.L84
	.byte	5
	.word	.L85,.L86
	.byte	5
	.word	.L87,.L88
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('_endinit_set')
	.sect	'.debug_abbrev'
.L42:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,49,16,63,12,17,1,18,1,64,6
	.byte	0,0,4,11,1,17,1,18,1,0,0,5,52,0,49,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('_endinit_set')
	.sect	'.debug_line'
.L43:
	.word	.L265-.L264
.L264:
	.half	3
	.word	.L267-.L266
.L266:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\cstart.c',0,0,0,0,0
.L267:
	.byte	5,30,7,0,5,2
	.word	.L29
	.byte	3,224,6,1,5,25,9
	.half	.L164-.L29
	.byte	3,13,1,5,18,9
	.half	.L268-.L164
	.byte	3,1,1,5,30,9
	.half	.L269-.L268
	.byte	3,1,1,5,1,9
	.half	.L270-.L269
	.byte	3,1,1,7,9
	.half	.L45-.L270
	.byte	0,1,1
.L265:
	.sdecl	'.debug_ranges',debug,cluster('_endinit_set')
	.sect	'.debug_ranges'
.L44:
	.word	-1,.L29,0,.L45-.L29,0,0
	.sdecl	'.debug_info',debug,cluster('setclockpersec')
	.sect	'.debug_info'
.L46:
	.word	178
	.half	3
	.word	.L47
	.byte	4,1
	.byte	'..\\cstart.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'U:\\Tasking\\workspace\\motEncPot\\Debug\\',0,12,1
	.word	.L49,.L48
	.byte	2
	.word	.L32
	.byte	3
	.byte	'setclockpersec',0,1,244,6,13,1,1
	.word	.L31,.L89,.L30
	.byte	4
	.word	.L31,.L89
	.byte	5
	.byte	'hz',0,1,246,6,28
	.word	.L90,.L91
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('setclockpersec')
	.sect	'.debug_abbrev'
.L47:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('setclockpersec')
	.sect	'.debug_line'
.L48:
	.word	.L272-.L271
.L271:
	.half	3
	.word	.L274-.L273
.L273:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\cstart.c',0,0,0,0,0
.L274:
	.byte	5,9,7,0,5,2
	.word	.L31
	.byte	3,203,7,1,5,22,9
	.half	.L275-.L31
	.byte	3,2,1,5,39,9
	.half	.L276-.L275
	.byte	1,5,22,9
	.half	.L277-.L276
	.byte	1,5,17,9
	.half	.L12-.L277
	.byte	3,4,1,5,30,9
	.half	.L278-.L12
	.byte	3,2,1,5,49,9
	.half	.L279-.L278
	.byte	1,5,30,9
	.half	.L280-.L279
	.byte	1,9
	.half	.L14-.L280
	.byte	3,4,1,5,55,9
	.half	.L281-.L14
	.byte	1,5,25,9
	.half	.L165-.L281
	.byte	3,5,1,5,1,7,9
	.half	.L50-.L165
	.byte	3,1,0,1,1
.L272:
	.sdecl	'.debug_ranges',debug,cluster('setclockpersec')
	.sect	'.debug_ranges'
.L49:
	.word	-1,.L31,0,.L50-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('_START')
	.sect	'.debug_info'
.L51:
	.word	153
	.half	3
	.word	.L52
	.byte	4,1
	.byte	'..\\cstart.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'U:\\Tasking\\workspace\\motEncPot\\Debug\\',0,12,1
	.word	.L54,.L53
	.byte	2
	.word	.L32
	.byte	3
	.byte	'_START',0,1,71,6,1,1,1
	.word	.L17,.L92,.L16
	.byte	4
	.word	.L17,.L92
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('_START')
	.sect	'.debug_abbrev'
.L52:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('_START')
	.sect	'.debug_line'
.L53:
	.word	.L283-.L282
.L282:
	.half	3
	.word	.L285-.L284
.L284:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\cstart.c',0,0,0,0,0
.L285:
	.byte	5,9,7,0,5,2
	.word	.L17
	.byte	3,205,0,1,9
	.half	.L286-.L17
	.byte	3,2,1,9
	.half	.L287-.L286
	.byte	3,2,1,9
	.half	.L288-.L287
	.byte	3,17,1,9
	.half	.L289-.L288
	.byte	3,14,1,9
	.half	.L290-.L289
	.byte	3,5,1,5,1,9
	.half	.L291-.L290
	.byte	3,1,1,7,9
	.half	.L55-.L291
	.byte	0,1,1
.L283:
	.sdecl	'.debug_ranges',debug,cluster('_START')
	.sect	'.debug_ranges'
.L54:
	.word	-1,.L17,0,.L55-.L17,0,0
	.sdecl	'.debug_info',debug,cluster('__init_sp')
	.sect	'.debug_info'
.L56:
	.word	156
	.half	3
	.word	.L57
	.byte	4,1
	.byte	'..\\cstart.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'U:\\Tasking\\workspace\\motEncPot\\Debug\\',0,12,1
	.word	.L59,.L58
	.byte	2
	.word	.L32
	.byte	3
	.byte	'__init_sp',0,1,126,6,1,1,1
	.word	.L19,.L93,.L18
	.byte	4
	.word	.L19,.L93
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('__init_sp')
	.sect	'.debug_abbrev'
.L57:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__init_sp')
	.sect	'.debug_line'
.L58:
	.word	.L293-.L292
.L292:
	.half	3
	.word	.L295-.L294
.L294:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\cstart.c',0,0,0,0,0
.L295:
	.byte	5,9,7,0,5,2
	.word	.L19
	.byte	3,159,1,1,9
	.half	.L296-.L19
	.byte	3,2,1,5,1,9
	.half	.L297-.L296
	.byte	3,1,1,7,9
	.half	.L60-.L297
	.byte	0,1,1
.L293:
	.sdecl	'.debug_ranges',debug,cluster('__init_sp')
	.sect	'.debug_ranges'
.L59:
	.word	-1,.L19,0,.L60-.L19,0,0
	.sdecl	'.debug_info',debug,cluster('_start')
	.sect	'.debug_info'
.L61:
	.word	615
	.half	3
	.word	.L62
	.byte	4,1
	.byte	'..\\cstart.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'U:\\Tasking\\workspace\\motEncPot\\Debug\\',0,12,1
	.word	.L64,.L63
	.byte	2
	.word	.L32
	.byte	3
	.byte	'_start',0,1,169,1,6,1,1,1
	.word	.L21,.L94,.L20
	.byte	4
	.word	.L21,.L94
	.byte	4
	.word	.L95,.L94
	.byte	5
	.byte	'pcxi',0,1,185,1,22
	.word	.L96,.L97
	.byte	6
	.word	.L76,.L98,.L99
	.byte	7
	.word	.L100,.L101
	.byte	8
	.word	.L79,.L102
	.byte	8
	.word	.L81,.L103
	.byte	0,0,6
	.word	.L83,.L104,.L105
	.byte	9
	.word	.L106,.L104,.L105
	.byte	8
	.word	.L85,.L107
	.byte	8
	.word	.L87,.L108
	.byte	0,0,6
	.word	.L76,.L105,.L109
	.byte	9
	.word	.L100,.L105,.L109
	.byte	8
	.word	.L79,.L110
	.byte	8
	.word	.L81,.L111
	.byte	0,0,4
	.word	.L112,.L94
	.byte	6
	.word	.L83,.L113,.L114
	.byte	9
	.word	.L106,.L113,.L114
	.byte	8
	.word	.L85,.L115
	.byte	8
	.word	.L87,.L116
	.byte	0,0,4
	.word	.L114,.L94
	.byte	4
	.word	.L117,.L94
	.byte	4
	.word	.L118,.L94
	.byte	4
	.word	.L119,.L94
	.byte	4
	.word	.L120,.L94
	.byte	5
	.byte	'csa_area_begin',0,1,166,5,15
	.word	.L121,.L122
	.byte	5
	.byte	'csa_area_end',0,1,167,5,15
	.word	.L121,.L123
	.byte	5
	.byte	'k',0,1,180,5,17
	.word	.L124,.L125
	.byte	5
	.byte	'no_of_csas',0,1,181,5,14
	.word	.L124,.L126
	.byte	5
	.byte	'csa',0,1,182,5,15
	.word	.L127,.L128
	.byte	5
	.byte	'seg_nr',0,1,183,5,23
	.word	.L96,.L129
	.byte	5
	.byte	'seg_idx',0,1,183,5,31
	.word	.L96,.L130
	.byte	5
	.byte	'pcxi_val',0,1,183,5,40
	.word	.L96,.L131
	.byte	5
	.byte	'first',0,1,184,5,15
	.word	.L132,.L133
	.byte	0,0,0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('_start')
	.sect	'.debug_abbrev'
.L62:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,11,1,49,16,85,6,0,0,8,52,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('_start')
	.sect	'.debug_line'
.L63:
	.word	.L299-.L298
.L298:
	.half	3
	.word	.L301-.L300
.L300:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\cstart.c',0,0,0,0,0
.L301:
	.byte	5,6,7,0,5,2
	.word	.L21
	.byte	3,168,1,1,5,18,9
	.half	.L134-.L21
	.byte	3,6,1,5,32,9
	.half	.L302-.L134
	.byte	3,4,1,5,27,9
	.half	.L95-.L302
	.byte	3,6,1,9
	.half	.L142-.L95
	.byte	3,1,1,9
	.half	.L303-.L142
	.byte	3,1,1,5,30,9
	.half	.L98-.L303
	.byte	3,129,5,1,9
	.half	.L149-.L98
	.byte	3,1,1,5,25,9
	.half	.L143-.L149
	.byte	3,13,1,5,18,9
	.half	.L304-.L143
	.byte	3,1,1,5,30,9
	.half	.L305-.L304
	.byte	3,1,1,5,19,9
	.half	.L306-.L305
	.byte	3,1,1,5,26,9
	.half	.L99-.L306
	.byte	3,252,122,1,5,30,9
	.half	.L104-.L99
	.byte	3,152,5,1,9
	.half	.L152-.L104
	.byte	3,1,1,5,25,9
	.half	.L150-.L152
	.byte	3,12,1,5,18,9
	.half	.L307-.L150
	.byte	3,1,1,5,30,9
	.half	.L308-.L307
	.byte	3,1,1,9
	.half	.L105-.L308
	.byte	3,76,1,9
	.half	.L154-.L105
	.byte	3,1,1,5,25,9
	.half	.L151-.L154
	.byte	3,13,1,5,18,9
	.half	.L309-.L151
	.byte	3,1,1,5,30,9
	.half	.L310-.L309
	.byte	3,1,1,5,19,9
	.half	.L311-.L310
	.byte	3,1,1,5,51,9
	.half	.L109-.L311
	.byte	3,146,123,1,9
	.half	.L312-.L109
	.byte	3,9,1,5,25,9
	.half	.L112-.L312
	.byte	3,10,1,5,59,9
	.half	.L313-.L112
	.byte	3,7,1,9
	.half	.L314-.L313
	.byte	3,11,1,5,56,9
	.half	.L315-.L314
	.byte	3,16,1,5,40,9
	.half	.L316-.L315
	.byte	3,214,0,1,5,36,9
	.half	.L317-.L316
	.byte	3,2,1,9
	.half	.L3-.L317
	.byte	3,1,1,5,55,9
	.half	.L318-.L3
	.byte	3,10,1,5,37,9
	.half	.L319-.L318
	.byte	3,1,1,5,31,9
	.half	.L320-.L319
	.byte	3,6,1,5,39,9
	.half	.L5-.L320
	.byte	3,1,1,5,53,9
	.half	.L321-.L5
	.byte	3,5,1,9
	.half	.L322-.L321
	.byte	3,1,1,5,57,9
	.half	.L323-.L322
	.byte	3,1,1,5,34,9
	.half	.L324-.L323
	.byte	3,6,1,5,38,9
	.half	.L6-.L324
	.byte	3,1,1,5,30,9
	.half	.L325-.L6
	.byte	3,1,1,5,39,9
	.half	.L7-.L325
	.byte	3,1,1,5,31,9
	.half	.L326-.L7
	.byte	3,1,1,5,39,9
	.half	.L8-.L326
	.byte	3,1,1,5,55,9
	.half	.L327-.L8
	.byte	3,8,1,5,30,9
	.half	.L113-.L327
	.byte	3,200,3,1,9
	.half	.L155-.L113
	.byte	3,1,1,5,25,9
	.half	.L153-.L155
	.byte	3,12,1,5,18,9
	.half	.L328-.L153
	.byte	3,1,1,5,30,9
	.half	.L329-.L328
	.byte	3,1,1,5,9,9
	.half	.L114-.L329
	.byte	3,152,126,1,9
	.half	.L117-.L114
	.byte	3,3,1,9
	.half	.L118-.L117
	.byte	3,11,1,9
	.half	.L119-.L118
	.byte	3,3,1,5,32,9
	.half	.L120-.L119
	.byte	3,13,1,9
	.half	.L330-.L120
	.byte	3,1,1,5,48,9
	.half	.L331-.L330
	.byte	3,16,1,5,32,3,112,1,5,72,9
	.half	.L332-.L331
	.byte	3,22,1,5,25,9
	.half	.L141-.L332
	.byte	3,2,1,5,20,9
	.half	.L140-.L141
	.byte	3,121,1,5,41,9
	.half	.L138-.L140
	.byte	3,7,1,5,55,9
	.half	.L10-.L138
	.byte	3,2,1,5,67,9
	.half	.L135-.L10
	.byte	3,4,1,5,40,9
	.half	.L136-.L135
	.byte	3,126,1,5,67,9
	.half	.L333-.L136
	.byte	3,2,1,5,61,9
	.half	.L147-.L333
	.byte	3,1,1,5,52,9
	.half	.L137-.L147
	.byte	3,1,1,5,25,9
	.half	.L148-.L137
	.byte	3,1,1,5,46,7,9
	.half	.L334-.L148
	.byte	3,2,1,5,54,9
	.half	.L335-.L334
	.byte	3,1,1,5,46,9
	.half	.L11-.L335
	.byte	3,116,1,5,41,9
	.half	.L9-.L11
	.byte	1,5,38,7,9
	.half	.L336-.L9
	.byte	3,15,1,5,18,9
	.half	.L337-.L336
	.byte	3,16,1,5,25,9
	.half	.L139-.L337
	.byte	3,8,1,5,19,9
	.half	.L338-.L139
	.byte	3,34,1,5,32,9
	.half	.L339-.L338
	.byte	1,5,1,9
	.half	.L65-.L339
	.byte	3,33,0,1,1
.L299:
	.sdecl	'.debug_ranges',debug,cluster('_start')
	.sect	'.debug_ranges'
.L64:
	.word	-1,.L21,0,.L65-.L21,0,0
.L101:
	.word	-1,.L21,.L98-.L21,.L99-.L21,-1,.L23,0,.L70-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L66:
	.word	145
	.half	3
	.word	.L67
	.byte	4,1
	.byte	'..\\cstart.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'U:\\Tasking\\workspace\\motEncPot\\Debug\\',0,12,1
	.word	.L69,.L68
	.byte	2
	.word	.L32
	.byte	3
	.byte	'.cocofun_3',0,1,1,1,1
	.word	.L23,.L70,.L22
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L67:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L68:
	.word	.L341-.L340
.L340:
	.half	3
	.word	.L343-.L342
.L342:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\cstart.c',0,0,0,0,0
.L343:
	.byte	5,31,7,0,5,2
	.word	.L23
	.byte	3,190,6,1,5,30,3,126,1,5,25,9
	.half	.L144-.L23
	.byte	3,3,1,9
	.half	.L344-.L144
	.byte	3,1,1,5,29,9
	.half	.L156-.L344
	.byte	3,1,1,5,30,3,1,1,5,31,9
	.half	.L345-.L156
	.byte	3,6,1,9
	.half	.L70-.L345
	.byte	0,1,1,5,31,0,5,2
	.word	.L23
	.byte	3,227,6,1,5,30,3,126,1,5,25,9
	.half	.L144-.L23
	.byte	3,3,1,9
	.half	.L344-.L144
	.byte	3,1,1,5,29,9
	.half	.L156-.L344
	.byte	3,1,1,5,30,3,1,1,5,31,9
	.half	.L345-.L156
	.byte	3,5,1,9
	.half	.L346-.L345
	.byte	3,92,1,7,9
	.half	.L70-.L346
	.byte	0,1,1,5,31,0,5,2
	.word	.L23
	.byte	3,190,6,1,5,30,3,126,1,5,25,9
	.half	.L144-.L23
	.byte	3,3,1,9
	.half	.L344-.L144
	.byte	3,1,1,5,29,9
	.half	.L156-.L344
	.byte	3,1,1,5,30,3,1,1,5,31,9
	.half	.L345-.L156
	.byte	3,6,1,9
	.half	.L70-.L345
	.byte	0,1,1,5,31,0,5,2
	.word	.L23
	.byte	3,227,6,1,5,30,3,126,1,5,25,9
	.half	.L144-.L23
	.byte	3,3,1,9
	.half	.L344-.L144
	.byte	3,1,1,5,29,9
	.half	.L156-.L344
	.byte	3,1,1,5,30,3,1,1,5,31,9
	.half	.L345-.L156
	.byte	3,5,1,9
	.half	.L346-.L345
	.byte	3,92,1,7,9
	.half	.L70-.L346
	.byte	0,1,1
.L341:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L69:
	.word	-1,.L23,0,.L70-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L71:
	.word	146
	.half	3
	.word	.L72
	.byte	4,1
	.byte	'..\\cstart.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'U:\\Tasking\\workspace\\motEncPot\\Debug\\',0,12,1
	.word	.L74,.L73
	.byte	2
	.word	.L32
	.byte	3
	.byte	'.cocofun_4',0,2,1,1,1,1
	.word	.L27,.L75,.L26
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L72:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,32,13,58,15,59,15,57,15
	.byte	54,15,17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L73:
	.word	.L348-.L347
.L347:
	.half	3
	.word	.L350-.L349
.L349:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\cstart.c',0,0,0,0,0
.L350:
	.byte	5,30,7,0,5,2
	.word	.L27
	.byte	3,187,6,1,5,31,9
	.half	.L162-.L27
	.byte	3,3,1,5,30,3,126,1,5,25,9
	.half	.L161-.L162
	.byte	3,4,1,9
	.half	.L163-.L161
	.byte	3,127,1,5,29,9
	.half	.L351-.L163
	.byte	3,2,1,5,30,3,1,1,5,31,9
	.half	.L352-.L351
	.byte	3,6,1,9
	.half	.L75-.L352
	.byte	0,1,1,5,30,0,5,2
	.word	.L27
	.byte	3,224,6,1,5,31,9
	.half	.L162-.L27
	.byte	3,3,1,5,30,3,126,1,5,25,9
	.half	.L161-.L162
	.byte	3,4,1,9
	.half	.L163-.L161
	.byte	3,127,1,5,29,9
	.half	.L351-.L163
	.byte	3,2,1,5,30,3,1,1,5,31,9
	.half	.L352-.L351
	.byte	3,5,1,9
	.half	.L353-.L352
	.byte	3,92,1,7,9
	.half	.L75-.L353
	.byte	0,1,1
.L348:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L74:
	.word	-1,.L27,0,.L75-.L27,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L22:
	.word	-1,.L23,.L23-.L23,.L70-.L23
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,.L27-.L27,.L75-.L27
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('_START')
	.sect	'.debug_loc'
.L16:
	.word	-1,.L17,.L17-.L17,.L92-.L17
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__init_sp')
	.sect	'.debug_loc'
.L18:
	.word	-1,.L19,.L19-.L19,.L93-.L19
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('_endinit_clear')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,.L25-.L25,.L77-.L25
	.half	2
	.byte	138,0
	.word	0,0
.L80:
	.word	-1,.L25,.L159-.L25,.L160-.L25
	.half	5
	.byte	144,39,157,32,32
	.word	.L161-.L25,.L75-.L25
	.half	5
	.byte	144,39,157,32,32
	.word	.L162-.L25,.L161-.L25
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L82:
	.word	-1,.L25,.L161-.L25,.L163-.L25
	.half	5
	.byte	144,32,157,32,32
	.word	.L159-.L25,.L77-.L25
	.half	5
	.byte	144,32,157,32,0
	.word	.L163-.L25,.L75-.L25
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('_endinit_set')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,.L29-.L29,.L84-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L86:
	.word	-1,.L29,.L162-.L29,.L162-.L29
	.half	5
	.byte	144,32,157,32,0
	.word	.L162-.L29,.L75-.L29
	.half	5
	.byte	144,39,157,32,32
	.word	.L164-.L29,.L84-.L29
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L88:
	.word	-1,.L29,.L161-.L29,.L163-.L29
	.half	5
	.byte	144,32,157,32,32
	.word	.L164-.L29,.L84-.L29
	.half	5
	.byte	144,32,157,32,0
	.word	.L163-.L29,.L75-.L29
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('_start')
	.sect	'.debug_loc'
.L20:
	.word	-1,.L21,.L21-.L21,.L134-.L21
	.half	2
	.byte	138,0
	.word	.L134-.L21,.L94-.L21
	.half	2
	.byte	138,8
	.word	.L94-.L21,.L94-.L21
	.half	2
	.byte	138,0
	.word	0,0
.L128:
	.word	-1,.L21,.L135-.L21,.L9-.L21
	.half	1
	.byte	111
	.word	.L136-.L21,.L137-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L122:
	.word	-1,.L21,.L23-.L21,.L70-.L21
	.half	2
	.byte	145,120
	.word	.L21-.L21,.L94-.L21
	.half	2
	.byte	145,120
	.word	0,0
.L123:
	.word	-1,.L21,.L21-.L21,.L94-.L21
	.half	2
	.byte	145,124
	.word	.L23-.L21,.L70-.L21
	.half	2
	.byte	145,124
	.word	0,0
.L133:
	.word	-1,.L21,.L138-.L21,.L139-.L21
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L125:
	.word	-1,.L21,.L140-.L21,.L139-.L21
	.half	5
	.byte	144,33,157,32,32
	.word	0,0
.L126:
	.word	-1,.L21,.L141-.L21,.L139-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L97:
	.word	-1,.L21,.L142-.L21,.L143-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	.L23-.L21,.L144-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L131:
	.word	-1,.L21,.L137-.L21,.L139-.L21
	.half	5
	.byte	144,32,157,32,32
	.word	.L145-.L21,.L146-.L21
	.half	5
	.byte	144,32,157,32,32
	.word	0,0
.L130:
	.word	-1,.L21,.L137-.L21,.L9-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L129:
	.word	-1,.L21,.L147-.L21,.L148-.L21
	.half	5
	.byte	144,32,157,32,32
	.word	0,0
.L110:
	.word	-1,.L21,.L154-.L21,.L151-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	.L23-.L21,.L23-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	.L151-.L21,.L109-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	.L23-.L21,.L70-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L107:
	.word	-1,.L21,.L23-.L21,.L70-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	.L150-.L21,.L151-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	.L152-.L21,.L150-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	.L23-.L21,.L23-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	.L23-.L21,.L23-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	0,0
.L102:
	.word	-1,.L21,.L144-.L21,.L70-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	.L143-.L21,.L99-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	.L149-.L21,.L143-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	.L23-.L21,.L144-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L115:
	.word	-1,.L21,.L23-.L21,.L23-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	.L23-.L21,.L70-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	.L153-.L21,.L145-.L21
	.half	5
	.byte	144,39,157,32,32
	.word	.L155-.L21,.L153-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L111:
	.word	-1,.L21,.L144-.L21,.L156-.L21
	.half	5
	.byte	144,32,157,32,32
	.word	.L151-.L21,.L158-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	.L156-.L21,.L70-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L103:
	.word	-1,.L21,.L143-.L21,.L150-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	.L144-.L21,.L156-.L21
	.half	5
	.byte	144,32,157,32,32
	.word	.L156-.L21,.L70-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L108:
	.word	-1,.L21,.L144-.L21,.L156-.L21
	.half	5
	.byte	144,32,157,32,32
	.word	.L156-.L21,.L70-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	.L150-.L21,.L151-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L116:
	.word	-1,.L21,.L153-.L21,.L157-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	.L144-.L21,.L156-.L21
	.half	5
	.byte	144,32,157,32,32
	.word	.L156-.L21,.L70-.L21
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('setclockpersec')
	.sect	'.debug_loc'
.L91:
	.word	-1,.L31,.L165-.L31,.L89-.L31
	.half	2
	.byte	144,34
	.word	0,0
.L30:
	.word	-1,.L31,.L31-.L31,.L89-.L31
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L354:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,26,8,27,8,28,8,29,8,30,8,31,8,16,8,17,8,24,8,25,8,32,8,33,8,34,8,35,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('_START')
	.sect	'.debug_frame'
	.word	24
	.word	.L354,.L17,.L92-.L17
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__init_sp')
	.sect	'.debug_frame'
	.word	24
	.word	.L354,.L19,.L93-.L19
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('_start')
	.sect	'.debug_frame'
	.word	36
	.word	.L354,.L21,.L94-.L21
	.byte	4
	.word	(.L134-.L21)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L94-.L134)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('_endinit_clear')
	.sect	'.debug_frame'
	.word	24
	.word	.L354,.L25,.L77-.L25
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('_endinit_set')
	.sect	'.debug_frame'
	.word	24
	.word	.L354,.L29,.L84-.L29
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('setclockpersec')
	.sect	'.debug_frame'
	.word	12
	.word	.L354,.L31,.L89-.L31
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L355:
	.word	48
	.word	-1
	.byte	3,0,2,1,30,12,26,0,8,26,8,27,8,28,8,29,8,30,8,31,8,16,8,17,8,24,8,25,8,32,8,33,8,34,8,35,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L355,.L23,.L70-.L23
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L355,.L27,.L75-.L27
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\cstart.c	   990  }
; ..\cstart.c	   991  #endif

	; Module end
